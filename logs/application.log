2022-08-05 00:00:31.655 DEBUG 15120 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [b8d32d07-3] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2022-08-05 00:00:31.660 DEBUG 15120 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [b8d32d07-3] 0..1 [com.liem.languageintergration.dto.responses.ApiResponse<com.liem.languageintergration.dto.responses.TranslationResponseDto>]
2022-08-05 00:00:31.661 TRACE 15120 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [b8d32d07-3] Encoding [ApiResponse(code=000000, message=Success, response=TranslationResponseDto(wordInSourceLanguage=ace, translations=[com.liem.languageintergration.dto.responses.TranslationDetailDto@47db0330, com.liem.languageintergration.dto.responses.TranslationDetailDto@1c49cb6d]), timestamp=2022-08-05T00:00:31.654943200)]
2022-08-05 00:00:31.664 TRACE 15120 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [b8d32d07-3] Completed 200 OK, headers={masked}
2022-08-05 00:00:31.664 TRACE 15120 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [b8d32d07-3, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:60661] Handling completed
2022-08-05 00:01:16.041  INFO 11760 --- [restartedMain] c.l.l.OxfordApplication                  : Starting OxfordApplication using Java 11.0.12 on DESKTOP-6L79JE3 with PID 11760 (D:\Work\Xperia\oxford\target\classes started by Liem in D:\Work\Xperia\oxford)
2022-08-05 00:01:16.043 DEBUG 11760 --- [restartedMain] c.l.l.OxfordApplication                  : Running with Spring Boot v2.7.2, Spring v5.3.22
2022-08-05 00:01:16.046  INFO 11760 --- [restartedMain] c.l.l.OxfordApplication                  : No active profile set, falling back to 1 default profile: "default"
2022-08-05 00:01:16.105  INFO 11760 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-08-05 00:01:16.106  INFO 11760 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-08-05 00:01:16.828  INFO 11760 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:01:16.829  INFO 11760 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-08-05 00:01:16.847  INFO 11760 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 0 Reactive MongoDB repository interfaces.
2022-08-05 00:01:17.233  INFO 11760 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:01:17.235  INFO 11760 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-08-05 00:01:17.249  INFO 11760 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2022-08-05 00:01:19.115 TRACE 11760 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	c.l.l.c.TranslationController:
	{GET /translate}: translate(String,String,String)
	{GET /translate/raw}: translateRaw(String,String,String)
2022-08-05 00:01:19.135 TRACE 11760 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.a.OpenApiWebfluxResource:
	{GET /v3/api-docs.yaml, produces [application/vnd.oai.openapi]}: openapiYaml(ServerHttpRequest,String,Locale)
	{GET /v3/api-docs, produces [application/json]}: openapiJson(ServerHttpRequest,String,Locale)
2022-08-05 00:01:19.137 TRACE 11760 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerWelcomeWebFlux:
	{GET /swagger-ui.html}: redirectToUi(ServerHttpRequest,ServerHttpResponse)
2022-08-05 00:01:19.138 TRACE 11760 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerConfigResource:
	{GET /v3/api-docs/swagger-config, produces [application/json]}: getSwaggerUiConfig(ServerHttpRequest)
2022-08-05 00:01:19.141 DEBUG 11760 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 6 mappings in 'requestMappingHandlerMapping'
2022-08-05 00:01:19.156 TRACE 11760 --- [restartedMain] o.s.w.r.f.s.s.RouterFunctionMapping      : 0 RouterFunction(s) in 'routerFunctionMapping'
2022-08-05 00:01:19.522 TRACE 11760 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/webjars/**] onto ResourceWebHandler [classpath [META-INF/resources/webjars/]]
2022-08-05 00:01:19.522 TRACE 11760 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/**] onto ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2022-08-05 00:01:19.523 DEBUG 11760 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2022-08-05 00:01:19.805  INFO 11760 --- [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@65ba8a55, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@7244f03d], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@215923ec]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@7426e8fe], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-08-05 00:01:20.124  INFO 11760 --- [cluster-ClusterId{value='62ebfb5f835f063c849cf047', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:1, serverValue:90}] to localhost:27017
2022-08-05 00:01:20.125  INFO 11760 --- [cluster-rtt-ClusterId{value='62ebfb5f835f063c849cf047', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:2, serverValue:91}] to localhost:27017
2022-08-05 00:01:20.127  INFO 11760 --- [cluster-ClusterId{value='62ebfb5f835f063c849cf047', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=76942000}
2022-08-05 00:01:20.260  INFO 11760 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-08-05 00:01:20.307 DEBUG 11760 --- [restartedMain] o.s.w.r.r.m.a.ControllerMethodResolver   : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2022-08-05 00:01:20.348 DEBUG 11760 --- [restartedMain] o.s.w.s.adapter.HttpWebHandlerAdapter    : enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2022-08-05 00:01:20.829  INFO 11760 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-08-05 00:01:20.890  INFO 11760 --- [restartedMain] o.s.b.web.embedded.netty.NettyWebServer  : Netty started on port 8080
2022-08-05 00:01:20.933  INFO 11760 --- [restartedMain] c.l.l.OxfordApplication                  : Started OxfordApplication in 5.405 seconds (JVM running for 6.963)
2022-08-05 00:01:21.652  INFO 11760 --- [nioEventLoopGroup-5-3] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:3, serverValue:92}] to localhost:27017
2022-08-05 00:01:37.602 TRACE 11760 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [be5f669a-1] HTTP GET "/api/translation/v1/translate/raw?workId=ace&sourceLang=en&targetLang=ar", headers={masked}
2022-08-05 00:01:37.633 DEBUG 11760 --- [reactor-http-nio-2] s.w.r.r.m.a.RequestMappingHandlerMapping : [be5f669a-1] Mapped to com.liem.languageintergration.controller.TranslationController#translateRaw(String, String, String)
2022-08-05 00:01:37.674  INFO 11760 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start API --- TranslationController.translateRaw ---
2022-08-05 00:01:37.685  INFO 11760 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start Service --- OxfordTranslationService.translate ---
2022-08-05 00:01:37.740  INFO 11760 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End Service --- OxfordTranslationService.translate --- in [54] ms
2022-08-05 00:01:37.741  INFO 11760 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End API --- TranslationController.translateRaw --- in [64] ms
2022-08-05 00:01:37.764 TRACE 11760 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [1d169eaa] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/ace, headers={masked}
2022-08-05 00:01:39.219 TRACE 11760 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [1d169eaa] [16039536-1] Response 200 OK, headers={masked}
2022-08-05 00:01:39.294 TRACE 11760 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [1d169eaa] [16039536-1] Decoded [TranslationDto(id=ace, metadata=MetadataDto(operation=translations, provider=Oxford University Press, schema=RetrieveTranslations), results=[TranslationEntryDto(id=ace, language=en, type=headword, lexicalEntries=[LexicalEntryDto(entries=[LexicalEntryDetailDto(pronunciations=[{audioFile=https://audio.oxforddictionaries.com/en/mp3/ace_1_gb_1_abbr.mp3, dialects=[British English], phoneticNotation=IPA, phoneticSpelling=eɪs}, {audioFile=https://audio.oxforddictionaries.com/en/mp3/ace_1_us_1_abbr.mp3, dialects=[American English], phoneticNotation=IPA, phoneticSpelling=eɪs}], senses=[SenseDto(id=b-en-ar0000165.002, notes=[{text=in cards, type=indicator}], translations=[{language=ar, text=‫آس‬}]), SenseDto(id=b-en-ar0000165.003, notes=[{text=in tennis, type=indicator}], translations=[{language=ar, text=‫ضَرْبة ساحِقة‬}])])], language=en, lexicalCategory=KeyValueDto(id=noun, text=Noun), text=ace)], word=ace)], word=ace)]
2022-08-05 00:01:39.296  INFO 11760 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Request to Oxford success
2022-08-05 00:01:39.301 DEBUG 11760 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [be5f669a-1] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2022-08-05 00:01:39.301 DEBUG 11760 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [be5f669a-1] 0..1 [com.liem.languageintergration.dto.responses.ApiResponse<com.liem.languageintergration.dto.oxford.TranslationDto>]
2022-08-05 00:01:39.308 TRACE 11760 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [be5f669a-1] Encoding [ApiResponse(code=000000, message=Success, response=TranslationDto(id=ace, metadata=MetadataDto(operation=translations, provider=Oxford University Press, schema=RetrieveTranslations), results=[TranslationEntryDto(id=ace, language=en, type=headword, lexicalEntries=[LexicalEntryDto(entries=[LexicalEntryDetailDto(pronunciations=[{audioFile=https://audio.oxforddictionaries.com/en/mp3/ace_1_gb_1_abbr.mp3, dialects=[British English], phoneticNotation=IPA, phoneticSpelling=eɪs}, {audioFile=https://audio.oxforddictionaries.com/en/mp3/ace_1_us_1_abbr.mp3, dialects=[American English], phoneticNotation=IPA, phoneticSpelling=eɪs}], senses=[SenseDto(id=b-en-ar0000165.002, notes=[{text=in cards, type=indicator}], translations=[{language=ar, text=‫آس‬}]), SenseDto(id=b-en-ar0000165.003, notes=[{text=in tennis, type=indicator}], translations=[{language=ar, text=‫ضَرْبة ساحِقة‬}])])], language=en, lexicalCategory=KeyValueDto(id=noun, text=Noun), text=ace)], word=ace)], word=ace), timestamp=2022-08-05T00:01:39.297871900)]
2022-08-05 00:01:39.330 TRACE 11760 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [be5f669a-1] Completed 200 OK, headers={masked}
2022-08-05 00:01:39.331 TRACE 11760 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [be5f669a-1, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:60824] Handling completed
2022-08-05 00:01:43.842 TRACE 11760 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [be5f669a-2] HTTP GET "/api/translation/v1/translate?workId=ace&sourceLang=en&targetLang=ar", headers={masked}
2022-08-05 00:01:43.843 DEBUG 11760 --- [reactor-http-nio-2] s.w.r.r.m.a.RequestMappingHandlerMapping : [be5f669a-2] Mapped to com.liem.languageintergration.controller.TranslationController#translate(String, String, String)
2022-08-05 00:01:43.846  INFO 11760 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start API --- TranslationController.translate ---
2022-08-05 00:01:43.847  INFO 11760 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start Service --- OxfordTranslationService.translate ---
2022-08-05 00:01:43.847  INFO 11760 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End Service --- OxfordTranslationService.translate --- in [0] ms
2022-08-05 00:01:43.848  INFO 11760 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End API --- TranslationController.translate --- in [1] ms
2022-08-05 00:01:43.850 TRACE 11760 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [f25fde5] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/ace, headers={masked}
2022-08-05 00:01:44.089 TRACE 11760 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [f25fde5] [16039536-2] Response 200 OK, headers={masked}
2022-08-05 00:01:44.091 TRACE 11760 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [f25fde5] [16039536-2] Decoded [TranslationDto(id=ace, metadata=MetadataDto(operation=translations, provider=Oxford University Press, schema=RetrieveTranslations), results=[TranslationEntryDto(id=ace, language=en, type=headword, lexicalEntries=[LexicalEntryDto(entries=[LexicalEntryDetailDto(pronunciations=[{audioFile=https://audio.oxforddictionaries.com/en/mp3/ace_1_gb_1_abbr.mp3, dialects=[British English], phoneticNotation=IPA, phoneticSpelling=eɪs}, {audioFile=https://audio.oxforddictionaries.com/en/mp3/ace_1_us_1_abbr.mp3, dialects=[American English], phoneticNotation=IPA, phoneticSpelling=eɪs}], senses=[SenseDto(id=b-en-ar0000165.002, notes=[{text=in cards, type=indicator}], translations=[{language=ar, text=‫آس‬}]), SenseDto(id=b-en-ar0000165.003, notes=[{text=in tennis, type=indicator}], translations=[{language=ar, text=‫ضَرْبة ساحِقة‬}])])], language=en, lexicalCategory=KeyValueDto(id=noun, text=Noun), text=ace)], word=ace)], word=ace)]
2022-08-05 00:01:44.091  INFO 11760 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Request to Oxford success
2022-08-05 00:01:44.094 DEBUG 11760 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [be5f669a-2] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2022-08-05 00:01:44.095 DEBUG 11760 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [be5f669a-2] 0..1 [com.liem.languageintergration.dto.responses.ApiResponse<com.liem.languageintergration.dto.responses.TranslationResponseDto>]
2022-08-05 00:01:44.096 TRACE 11760 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [be5f669a-2] Encoding [ApiResponse(code=000000, message=Success, response=TranslationResponseDto(wordInSourceLanguage=ace, translations=[com.liem.languageintergration.dto.responses.TranslationDetailDto@125120f0, com.liem.languageintergration.dto.responses.TranslationDetailDto@e6dce13]), timestamp=2022-08-05T00:01:44.094127400)]
2022-08-05 00:01:44.102 TRACE 11760 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [be5f669a-2] Completed 200 OK, headers={masked}
2022-08-05 00:01:44.102 TRACE 11760 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [be5f669a-2, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:60824] Handling completed
2022-08-05 00:02:33.616  INFO 23236 --- [restartedMain] c.l.l.OxfordApplication                  : Starting OxfordApplication using Java 11.0.12 on DESKTOP-6L79JE3 with PID 23236 (D:\Work\Xperia\oxford\target\classes started by Liem in D:\Work\Xperia\oxford)
2022-08-05 00:02:33.618 DEBUG 23236 --- [restartedMain] c.l.l.OxfordApplication                  : Running with Spring Boot v2.7.2, Spring v5.3.22
2022-08-05 00:02:33.618  INFO 23236 --- [restartedMain] c.l.l.OxfordApplication                  : No active profile set, falling back to 1 default profile: "default"
2022-08-05 00:02:33.675  INFO 23236 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-08-05 00:02:33.676  INFO 23236 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-08-05 00:02:34.525  INFO 23236 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:02:34.526  INFO 23236 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-08-05 00:02:34.545  INFO 23236 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 0 Reactive MongoDB repository interfaces.
2022-08-05 00:02:35.008  INFO 23236 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:02:35.010  INFO 23236 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-08-05 00:02:35.025  INFO 23236 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2022-08-05 00:02:36.981 TRACE 23236 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	c.l.l.c.TranslationController:
	{GET /translate}: translate(String,String,String)
	{GET /translate/raw}: translateRaw(String,String,String)
2022-08-05 00:02:36.998 TRACE 23236 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.a.OpenApiWebfluxResource:
	{GET /v3/api-docs, produces [application/json]}: openapiJson(ServerHttpRequest,String,Locale)
	{GET /v3/api-docs.yaml, produces [application/vnd.oai.openapi]}: openapiYaml(ServerHttpRequest,String,Locale)
2022-08-05 00:02:37.000 TRACE 23236 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerWelcomeWebFlux:
	{GET /swagger-ui.html}: redirectToUi(ServerHttpRequest,ServerHttpResponse)
2022-08-05 00:02:37.001 TRACE 23236 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerConfigResource:
	{GET /v3/api-docs/swagger-config, produces [application/json]}: getSwaggerUiConfig(ServerHttpRequest)
2022-08-05 00:02:37.004 DEBUG 23236 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 6 mappings in 'requestMappingHandlerMapping'
2022-08-05 00:02:37.018 TRACE 23236 --- [restartedMain] o.s.w.r.f.s.s.RouterFunctionMapping      : 0 RouterFunction(s) in 'routerFunctionMapping'
2022-08-05 00:02:37.409 TRACE 23236 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/webjars/**] onto ResourceWebHandler [classpath [META-INF/resources/webjars/]]
2022-08-05 00:02:37.409 TRACE 23236 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/**] onto ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2022-08-05 00:02:37.410 DEBUG 23236 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2022-08-05 00:02:37.699  INFO 23236 --- [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3685409b, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@b7f8b5f], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@22dcf1cf]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@54abd824], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-08-05 00:02:38.039  INFO 23236 --- [cluster-ClusterId{value='62ebfbad1af1ad3f35cce8f9', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:1, serverValue:93}] to localhost:27017
2022-08-05 00:02:38.039  INFO 23236 --- [cluster-rtt-ClusterId{value='62ebfbad1af1ad3f35cce8f9', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:2, serverValue:94}] to localhost:27017
2022-08-05 00:02:38.042  INFO 23236 --- [cluster-ClusterId{value='62ebfbad1af1ad3f35cce8f9', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=80196800}
2022-08-05 00:02:38.225  INFO 23236 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-08-05 00:02:38.283 DEBUG 23236 --- [restartedMain] o.s.w.r.r.m.a.ControllerMethodResolver   : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2022-08-05 00:02:38.346 DEBUG 23236 --- [restartedMain] o.s.w.s.adapter.HttpWebHandlerAdapter    : enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2022-08-05 00:02:38.850  INFO 23236 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-08-05 00:02:38.918  INFO 23236 --- [restartedMain] o.s.b.web.embedded.netty.NettyWebServer  : Netty started on port 8080
2022-08-05 00:02:38.958  INFO 23236 --- [restartedMain] c.l.l.OxfordApplication                  : Started OxfordApplication in 5.854 seconds (JVM running for 7.347)
2022-08-05 00:02:39.839  INFO 23236 --- [nioEventLoopGroup-5-3] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:3, serverValue:95}] to localhost:27017
2022-08-05 00:02:50.025 TRACE 23236 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [b573321b-1] HTTP GET "/api/translation/v1/translate?workId=ace&sourceLang=en&targetLang=ar", headers={masked}
2022-08-05 00:02:50.047 DEBUG 23236 --- [reactor-http-nio-2] s.w.r.r.m.a.RequestMappingHandlerMapping : [b573321b-1] Mapped to com.liem.languageintergration.controller.TranslationController#translate(String, String, String)
2022-08-05 00:02:50.075  INFO 23236 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start API --- TranslationController.translate ---
2022-08-05 00:02:50.084  INFO 23236 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start Service --- OxfordTranslationService.translate ---
2022-08-05 00:02:50.129  INFO 23236 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End Service --- OxfordTranslationService.translate --- in [44] ms
2022-08-05 00:02:50.130  INFO 23236 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End API --- TranslationController.translate --- in [53] ms
2022-08-05 00:02:50.154 TRACE 23236 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [7a1b2be4] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/ace, headers={masked}
2022-08-05 00:02:51.610 TRACE 23236 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [7a1b2be4] [6cfd95b4-1] Response 200 OK, headers={masked}
2022-08-05 00:02:51.687 TRACE 23236 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [7a1b2be4] [6cfd95b4-1] Decoded [TranslationDto(id=ace, metadata=MetadataDto(operation=translations, provider=Oxford University Press, schema=RetrieveTranslations), results=[TranslationEntryDto(id=ace, language=en, type=headword, lexicalEntries=[LexicalEntryDto(entries=[LexicalEntryDetailDto(pronunciations=[{audioFile=https://audio.oxforddictionaries.com/en/mp3/ace_1_gb_1_abbr.mp3, dialects=[British English], phoneticNotation=IPA, phoneticSpelling=eɪs}, {audioFile=https://audio.oxforddictionaries.com/en/mp3/ace_1_us_1_abbr.mp3, dialects=[American English], phoneticNotation=IPA, phoneticSpelling=eɪs}], senses=[SenseDto(id=b-en-ar0000165.002, notes=[{text=in cards, type=indicator}], translations=[{language=ar, text=‫آس‬}]), SenseDto(id=b-en-ar0000165.003, notes=[{text=in tennis, type=indicator}], translations=[{language=ar, text=‫ضَرْبة ساحِقة‬}])])], language=en, lexicalCategory=KeyValueDto(id=noun, text=Noun), text=ace)], word=ace)], word=ace)]
2022-08-05 00:02:51.688  INFO 23236 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Request to Oxford success
2022-08-05 00:02:51.696 DEBUG 23236 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [b573321b-1] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2022-08-05 00:02:51.697 DEBUG 23236 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [b573321b-1] 0..1 [com.liem.languageintergration.dto.responses.ApiResponse<com.liem.languageintergration.dto.responses.TranslationResponseDto>]
2022-08-05 00:02:51.704 TRACE 23236 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [b573321b-1] Encoding [ApiResponse(code=000000, message=Success, response=TranslationResponseDto(wordInSourceLanguage=ace, translations=[com.liem.languageintergration.dto.responses.TranslationDetailDto@57290b9c, com.liem.languageintergration.dto.responses.TranslationDetailDto@1cfd392f]), timestamp=2022-08-05T00:02:51.691091200)]
2022-08-05 00:02:51.721 TRACE 23236 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [b573321b-1] Completed 200 OK, headers={masked}
2022-08-05 00:02:51.723 TRACE 23236 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [b573321b-1, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:60967] Handling completed
2022-08-05 00:03:10.444 TRACE 23236 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [b573321b-2] HTTP GET "/api/translation/v1/translate?workId=king&sourceLang=en&targetLang=ar", headers={masked}
2022-08-05 00:03:10.444 DEBUG 23236 --- [reactor-http-nio-2] s.w.r.r.m.a.RequestMappingHandlerMapping : [b573321b-2] Mapped to com.liem.languageintergration.controller.TranslationController#translate(String, String, String)
2022-08-05 00:03:10.446  INFO 23236 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start API --- TranslationController.translate ---
2022-08-05 00:03:10.446  INFO 23236 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start Service --- OxfordTranslationService.translate ---
2022-08-05 00:03:10.446  INFO 23236 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End Service --- OxfordTranslationService.translate --- in [0] ms
2022-08-05 00:03:10.447  INFO 23236 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End API --- TranslationController.translate --- in [0] ms
2022-08-05 00:03:10.447 TRACE 23236 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [2acff6f0] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/king, headers={masked}
2022-08-05 00:03:10.791 TRACE 23236 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [2acff6f0] [6cfd95b4-2] Response 200 OK, headers={masked}
2022-08-05 00:03:10.793 TRACE 23236 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [2acff6f0] [6cfd95b4-2] Decoded [TranslationDto(id=king, metadata=MetadataDto(operation=translations, provider=Oxford University Press, schema=RetrieveTranslations), results=[TranslationEntryDto(id=king, language=en, type=headword, lexicalEntries=[LexicalEntryDto(entries=[LexicalEntryDetailDto(pronunciations=[{audioFile=https://audio.oxforddictionaries.com/en/mp3/king_1_gb_1.mp3, dialects=[British English], phoneticNotation=IPA, phoneticSpelling=kɪŋ}, {audioFile=https://audio.oxforddictionaries.com/en/mp3/king_us_1.mp3, dialects=[American English], phoneticNotation=IPA, phoneticSpelling=kɪŋ}], senses=[SenseDto(id=b-en-ar0012567.002, notes=[{text=monarch, type=indicator}], translations=[{language=ar, text=‫مَلِك‬}, {language=ar, text=‫عاهِل‬}]), SenseDto(id=b-en-ar0012567.003, notes=[{text=in chess, type=indicator}], translations=[{language=ar, text=‫مَلِك‬}, {language=ar, text=‫شاه‬}]), SenseDto(id=b-en-ar0012567.004, notes=[{text=in draughts, checkers, type=indicator}], translations=[{language=ar, text=‫مَلِك‬}]), SenseDto(id=b-en-ar0012567.005, notes=[{text=in cards, type=indicator}], translations=[{language=ar, text=‫مَلِك‬}])])], language=en, lexicalCategory=KeyValueDto(id=noun, text=Noun), text=king)], word=king)], word=king)]
2022-08-05 00:03:10.794  INFO 23236 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Request to Oxford success
2022-08-05 00:03:10.795 DEBUG 23236 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [b573321b-2] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2022-08-05 00:03:10.795 DEBUG 23236 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [b573321b-2] 0..1 [com.liem.languageintergration.dto.responses.ApiResponse<com.liem.languageintergration.dto.responses.TranslationResponseDto>]
2022-08-05 00:03:10.796 TRACE 23236 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [b573321b-2] Encoding [ApiResponse(code=000000, message=Success, response=TranslationResponseDto(wordInSourceLanguage=king, translations=[com.liem.languageintergration.dto.responses.TranslationDetailDto@340cc033, com.liem.languageintergration.dto.responses.TranslationDetailDto@6121c834, com.liem.languageintergration.dto.responses.TranslationDetailDto@6040c997, com.liem.languageintergration.dto.responses.TranslationDetailDto@c03427c]), timestamp=2022-08-05T00:03:10.795566)]
2022-08-05 00:03:10.797 TRACE 23236 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [b573321b-2] Completed 200 OK, headers={masked}
2022-08-05 00:03:10.797 TRACE 23236 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [b573321b-2, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:60967] Handling completed
2022-08-05 00:03:19.935 TRACE 23236 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [b573321b-3] HTTP GET "/api/translation/v1/translate?workId=dick&sourceLang=en&targetLang=ar", headers={masked}
2022-08-05 00:03:19.936 DEBUG 23236 --- [reactor-http-nio-2] s.w.r.r.m.a.RequestMappingHandlerMapping : [b573321b-3] Mapped to com.liem.languageintergration.controller.TranslationController#translate(String, String, String)
2022-08-05 00:03:19.938  INFO 23236 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start API --- TranslationController.translate ---
2022-08-05 00:03:19.940  INFO 23236 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start Service --- OxfordTranslationService.translate ---
2022-08-05 00:03:19.940  INFO 23236 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End Service --- OxfordTranslationService.translate --- in [0] ms
2022-08-05 00:03:19.941  INFO 23236 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End API --- TranslationController.translate --- in [1] ms
2022-08-05 00:03:19.941 TRACE 23236 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [57b97ecc] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dick, headers={masked}
2022-08-05 00:03:20.262 TRACE 23236 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [57b97ecc] [6cfd95b4-3] Response 200 OK, headers={masked}
2022-08-05 00:03:20.264 TRACE 23236 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [57b97ecc] [6cfd95b4-3] Decoded [TranslationDto(id=dick, metadata=MetadataDto(operation=translations, provider=Oxford University Press, schema=RetrieveTranslations), results=[TranslationEntryDto(id=dick, language=en, type=headword, lexicalEntries=[LexicalEntryDto(entries=[LexicalEntryDetailDto(pronunciations=[{audioFile=https://audio.oxforddictionaries.com/en/mp3/dick_gb_1.mp3, dialects=[British English], phoneticNotation=IPA, phoneticSpelling=dɪk}, {audioFile=https://audio.oxforddictionaries.com/en/mp3/dick_us_1.mp3, dialects=[American English], phoneticNotation=IPA, phoneticSpelling=dɪk}], senses=[SenseDto(id=b-en-ar0006061.002, notes=null, translations=[{language=ar, text=‫زُبّ‬}])])], language=en, lexicalCategory=KeyValueDto(id=noun, text=Noun), text=dick)], word=dick)], word=dick)]
2022-08-05 00:03:20.264  INFO 23236 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Request to Oxford success
2022-08-05 00:03:20.286 TRACE 23236 --- [reactor-http-nio-2] o.s.w.r.function.server.RouterFunctions  : [b573321b-3] Matched org.springframework.web.reactive.function.server.RequestPredicates$$Lambda$1601/0x0000000800a2c040@1cc19384
2022-08-05 00:03:20.295 DEBUG 23236 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [b573321b-3] Resolved [NullPointerException: null] for HTTP GET /translate
2022-08-05 00:03:20.303 ERROR 23236 --- [reactor-http-nio-2] a.w.r.e.AbstractErrorWebExceptionHandler : [b573321b-3]  500 Server Error for HTTP GET "/translate?workId=dick&sourceLang=en&targetLang=ar"

java.lang.NullPointerException: null
	at com.liem.languageintergration.mapper.TranslationResponseMapper.toTranslation(TranslationResponseMapper.java:67) ~[classes/:na]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler com.liem.languageintergration.controller.TranslationController#translate(String, String, String) [DispatcherHandler]
	*__checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/api/translation/v1/translate?workId=dick&sourceLang=en&targetLang=ar" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at com.liem.languageintergration.mapper.TranslationResponseMapper.toTranslation(TranslationResponseMapper.java:67) ~[classes/:na]
		at com.liem.languageintergration.mapper.TranslationResponseMapper.lambda$toTranslations$1(TranslationResponseMapper.java:51) ~[classes/:na]
		at java.base/java.util.ArrayList.forEach(ArrayList.java:1541) ~[na:na]
		at com.liem.languageintergration.mapper.TranslationResponseMapper.lambda$toTranslations$2(TranslationResponseMapper.java:51) ~[classes/:na]
		at java.base/java.util.ArrayList.forEach(ArrayList.java:1541) ~[na:na]
		at com.liem.languageintergration.mapper.TranslationResponseMapper.lambda$toTranslations$3(TranslationResponseMapper.java:50) ~[classes/:na]
		at java.base/java.util.ArrayList.forEach(ArrayList.java:1541) ~[na:na]
		at com.liem.languageintergration.mapper.TranslationResponseMapper.toTranslations(TranslationResponseMapper.java:49) ~[classes/:na]
		at com.liem.languageintergration.mapper.TranslationResponseMapper.lambda$toResponse$0(TranslationResponseMapper.java:33) ~[classes/:na]
		at java.base/java.util.ArrayList.forEach(ArrayList.java:1541) ~[na:na]
		at com.liem.languageintergration.mapper.TranslationResponseMapper.toResponse(TranslationResponseMapper.java:33) ~[classes/:na]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber.signalCached(MonoCacheTime.java:337) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber.onNext(MonoCacheTime.java:354) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxRetry$RetrySubscriber.onNext(FluxRetry.java:87) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:400) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:419) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:473) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:703) ~[reactor-netty-http-1.0.21.jar:1.0.21]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:299) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:510) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:449) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.79.Final.jar:4.1.79.Final]
		at java.base/java.lang.Thread.run(Thread.java:829) ~[na:na]

2022-08-05 00:03:20.310 TRACE 23236 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [b573321b-3] Encoding [{timestamp=Fri Aug 05 00:03:20 ICT 2022, path=/translate, status=500, error=Internal Server Error, message=, requestId=b573321b-3, trace=java.lang.NullPointerException
	at com.liem.languageintergration.mapper.TranslationResponseMapper.toTranslation(TranslationResponseMapper.java:67)
	Suppressed: The stacktrace has been enhanced by Reactor, refer to additional information below: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler com.liem.languageintergration.controller.TranslationController#translate(String, String, String) [DispatcherHandler]
	*__checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/api/translation/v1/translate?workId=dick&sourceLang=en&targetLang=ar" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at com.liem.languageintergration.mapper.TranslationResponseMapper.toTranslation(TranslationResponseMapper.java:67)
		at com.liem.languageintergration.mapper.TranslationResponseMapper.lambda$toTranslations$1(TranslationResponseMapper.java:51)
		at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
		at com.liem.languageintergration.mapper.TranslationResponseMapper.lambda$toTranslations$2(TranslationResponseMapper.java:51)
		at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
		at com.liem.languageintergration.mapper.TranslationResponseMapper.lambda$toTranslations$3(TranslationResponseMapper.java:50)
		at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
		at com.liem.languageintergration.mapper.TranslationResponseMapper.toTranslations(TranslationResponseMapper.java:49)
		at com.liem.languageintergration.mapper.TranslationResponseMapper.lambda$toResponse$0(TranslationResponseMapper.java:33)
		at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
		at com.liem.languageintergration.mapper.TranslationResponseMapper.toResponse(TranslationResponseMapper.java:33)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber.signalCached(MonoCacheTime.java:337)
		at reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber.onNext(MonoCacheTime.java:354)
		at reactor.core.publisher.FluxRetry$RetrySubscriber.onNext(FluxRetry.java:87)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:400)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:419)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:473)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:703)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:299)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:510)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:449)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:829)
}]
2022-08-05 00:03:20.317 TRACE 23236 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [b573321b-3] Completed 500 INTERNAL_SERVER_ERROR, headers={masked}
2022-08-05 00:03:20.317 TRACE 23236 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [b573321b-3, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:60967] Handling completed
2022-08-05 00:05:48.475  INFO 5140 --- [restartedMain] c.l.l.OxfordApplication                  : Starting OxfordApplication using Java 11.0.12 on DESKTOP-6L79JE3 with PID 5140 (D:\Work\Xperia\oxford\target\classes started by Liem in D:\Work\Xperia\oxford)
2022-08-05 00:05:48.480 DEBUG 5140 --- [restartedMain] c.l.l.OxfordApplication                  : Running with Spring Boot v2.7.2, Spring v5.3.22
2022-08-05 00:05:48.482  INFO 5140 --- [restartedMain] c.l.l.OxfordApplication                  : No active profile set, falling back to 1 default profile: "default"
2022-08-05 00:05:48.573  INFO 5140 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-08-05 00:05:48.573  INFO 5140 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-08-05 00:05:49.385  INFO 5140 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:05:49.386  INFO 5140 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-08-05 00:05:49.405  INFO 5140 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 0 Reactive MongoDB repository interfaces.
2022-08-05 00:05:49.798  INFO 5140 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:05:49.799  INFO 5140 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-08-05 00:05:49.815  INFO 5140 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2022-08-05 00:05:51.859 TRACE 5140 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	c.l.l.c.TranslationController:
	{GET /translate}: translate(String,String,String)
	{GET /translate/raw}: translateRaw(String,String,String)
2022-08-05 00:05:51.877 TRACE 5140 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.a.OpenApiWebfluxResource:
	{GET /v3/api-docs, produces [application/json]}: openapiJson(ServerHttpRequest,String,Locale)
	{GET /v3/api-docs.yaml, produces [application/vnd.oai.openapi]}: openapiYaml(ServerHttpRequest,String,Locale)
2022-08-05 00:05:51.878 TRACE 5140 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerWelcomeWebFlux:
	{GET /swagger-ui.html}: redirectToUi(ServerHttpRequest,ServerHttpResponse)
2022-08-05 00:05:51.880 TRACE 5140 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerConfigResource:
	{GET /v3/api-docs/swagger-config, produces [application/json]}: getSwaggerUiConfig(ServerHttpRequest)
2022-08-05 00:05:51.882 DEBUG 5140 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 6 mappings in 'requestMappingHandlerMapping'
2022-08-05 00:05:51.896 TRACE 5140 --- [restartedMain] o.s.w.r.f.s.s.RouterFunctionMapping      : 0 RouterFunction(s) in 'routerFunctionMapping'
2022-08-05 00:05:52.281 TRACE 5140 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/webjars/**] onto ResourceWebHandler [classpath [META-INF/resources/webjars/]]
2022-08-05 00:05:52.281 TRACE 5140 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/**] onto ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2022-08-05 00:05:52.281 DEBUG 5140 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2022-08-05 00:05:52.568  INFO 5140 --- [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@23a2758c, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@60ec6a58], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2932617e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@627e5a8], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-08-05 00:05:52.894  INFO 5140 --- [cluster-rtt-ClusterId{value='62ebfc70166c521cba8aefe4', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:1, serverValue:96}] to localhost:27017
2022-08-05 00:05:52.894  INFO 5140 --- [cluster-ClusterId{value='62ebfc70166c521cba8aefe4', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:2, serverValue:97}] to localhost:27017
2022-08-05 00:05:52.896  INFO 5140 --- [cluster-ClusterId{value='62ebfc70166c521cba8aefe4', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=73001200}
2022-08-05 00:05:53.031  INFO 5140 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-08-05 00:05:53.079 DEBUG 5140 --- [restartedMain] o.s.w.r.r.m.a.ControllerMethodResolver   : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2022-08-05 00:05:53.124 DEBUG 5140 --- [restartedMain] o.s.w.s.adapter.HttpWebHandlerAdapter    : enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2022-08-05 00:05:53.595  INFO 5140 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-08-05 00:05:53.658  INFO 5140 --- [restartedMain] o.s.b.web.embedded.netty.NettyWebServer  : Netty started on port 8080
2022-08-05 00:05:53.700  INFO 5140 --- [restartedMain] c.l.l.OxfordApplication                  : Started OxfordApplication in 5.838 seconds (JVM running for 7.082)
2022-08-05 00:05:54.504  INFO 5140 --- [nioEventLoopGroup-5-3] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:3, serverValue:98}] to localhost:27017
2022-08-05 00:05:59.422 TRACE 5140 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [c0d0d707-1] HTTP GET "/api/translation/v1/translate/raw?workId=dick&sourceLang=en&targetLang=ar", headers={masked}
2022-08-05 00:05:59.441 DEBUG 5140 --- [reactor-http-nio-2] s.w.r.r.m.a.RequestMappingHandlerMapping : [c0d0d707-1] Mapped to com.liem.languageintergration.controller.TranslationController#translateRaw(String, String, String)
2022-08-05 00:05:59.469  INFO 5140 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start API --- TranslationController.translateRaw ---
2022-08-05 00:05:59.478  INFO 5140 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start Service --- OxfordTranslationService.translate ---
2022-08-05 00:05:59.520  INFO 5140 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End Service --- OxfordTranslationService.translate --- in [40] ms
2022-08-05 00:05:59.521  INFO 5140 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End API --- TranslationController.translateRaw --- in [50] ms
2022-08-05 00:05:59.548 TRACE 5140 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [2bf2d84a] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dick, headers={masked}
2022-08-05 00:06:01.031 TRACE 5140 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [2bf2d84a] [b3503e8e-1] Response 200 OK, headers={masked}
2022-08-05 00:06:01.109 TRACE 5140 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [2bf2d84a] [b3503e8e-1] Decoded [TranslationDto(id=dick, metadata=MetadataDto(operation=translations, provider=Oxford University Press, schema=RetrieveTranslations), results=[TranslationEntryDto(id=dick, language=en, type=headword, lexicalEntries=[LexicalEntryDto(entries=[LexicalEntryDetailDto(pronunciations=[{audioFile=https://audio.oxforddictionaries.com/en/mp3/dick_gb_1.mp3, dialects=[British English], phoneticNotation=IPA, phoneticSpelling=dɪk}, {audioFile=https://audio.oxforddictionaries.com/en/mp3/dick_us_1.mp3, dialects=[American English], phoneticNotation=IPA, phoneticSpelling=dɪk}], senses=[SenseDto(id=b-en-ar0006061.002, notes=null, registers=[{id=vulgar_slang, text=Vulgar_Slang}], translations=[{language=ar, text=‫زُبّ‬}])])], language=en, lexicalCategory=KeyValueDto(id=noun, text=Noun), text=dick)], word=dick)], word=dick)]
2022-08-05 00:06:01.111  INFO 5140 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Request to Oxford success
2022-08-05 00:06:01.116 DEBUG 5140 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [c0d0d707-1] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2022-08-05 00:06:01.116 DEBUG 5140 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [c0d0d707-1] 0..1 [com.liem.languageintergration.dto.responses.ApiResponse<com.liem.languageintergration.dto.oxford.TranslationDto>]
2022-08-05 00:06:01.124 TRACE 5140 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [c0d0d707-1] Encoding [ApiResponse(code=000000, message=Success, response=TranslationDto(id=dick, metadata=MetadataDto(operation=translations, provider=Oxford University Press, schema=RetrieveTranslations), results=[TranslationEntryDto(id=dick, language=en, type=headword, lexicalEntries=[LexicalEntryDto(entries=[LexicalEntryDetailDto(pronunciations=[{audioFile=https://audio.oxforddictionaries.com/en/mp3/dick_gb_1.mp3, dialects=[British English], phoneticNotation=IPA, phoneticSpelling=dɪk}, {audioFile=https://audio.oxforddictionaries.com/en/mp3/dick_us_1.mp3, dialects=[American English], phoneticNotation=IPA, phoneticSpelling=dɪk}], senses=[SenseDto(id=b-en-ar0006061.002, notes=null, registers=[{id=vulgar_slang, text=Vulgar_Slang}], translations=[{language=ar, text=‫زُبّ‬}])])], language=en, lexicalCategory=KeyValueDto(id=noun, text=Noun), text=dick)], word=dick)], word=dick), timestamp=2022-08-05T00:06:01.112659300)]
2022-08-05 00:06:01.149 TRACE 5140 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [c0d0d707-1] Completed 200 OK, headers={masked}
2022-08-05 00:06:01.151 TRACE 5140 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [c0d0d707-1, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:61116] Handling completed
2022-08-05 00:06:27.329  INFO 22316 --- [restartedMain] c.l.l.OxfordApplication                  : Starting OxfordApplication using Java 11.0.12 on DESKTOP-6L79JE3 with PID 22316 (D:\Work\Xperia\oxford\target\classes started by Liem in D:\Work\Xperia\oxford)
2022-08-05 00:06:27.331 DEBUG 22316 --- [restartedMain] c.l.l.OxfordApplication                  : Running with Spring Boot v2.7.2, Spring v5.3.22
2022-08-05 00:06:27.331  INFO 22316 --- [restartedMain] c.l.l.OxfordApplication                  : No active profile set, falling back to 1 default profile: "default"
2022-08-05 00:06:27.386  INFO 22316 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-08-05 00:06:27.386  INFO 22316 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-08-05 00:06:28.165  INFO 22316 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:06:28.166  INFO 22316 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-08-05 00:06:28.185  INFO 22316 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 Reactive MongoDB repository interfaces.
2022-08-05 00:06:28.617  INFO 22316 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:06:28.619  INFO 22316 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-08-05 00:06:28.633  INFO 22316 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2022-08-05 00:06:30.612 TRACE 22316 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	c.l.l.c.TranslationController:
	{GET /translate}: translate(String,String,String)
	{GET /translate/raw}: translateRaw(String,String,String)
2022-08-05 00:06:30.630 TRACE 22316 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.a.OpenApiWebfluxResource:
	{GET /v3/api-docs.yaml, produces [application/vnd.oai.openapi]}: openapiYaml(ServerHttpRequest,String,Locale)
	{GET /v3/api-docs, produces [application/json]}: openapiJson(ServerHttpRequest,String,Locale)
2022-08-05 00:06:30.632 TRACE 22316 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerWelcomeWebFlux:
	{GET /swagger-ui.html}: redirectToUi(ServerHttpRequest,ServerHttpResponse)
2022-08-05 00:06:30.633 TRACE 22316 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerConfigResource:
	{GET /v3/api-docs/swagger-config, produces [application/json]}: getSwaggerUiConfig(ServerHttpRequest)
2022-08-05 00:06:30.636 DEBUG 22316 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 6 mappings in 'requestMappingHandlerMapping'
2022-08-05 00:06:30.649 TRACE 22316 --- [restartedMain] o.s.w.r.f.s.s.RouterFunctionMapping      : 0 RouterFunction(s) in 'routerFunctionMapping'
2022-08-05 00:06:31.036 TRACE 22316 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/webjars/**] onto ResourceWebHandler [classpath [META-INF/resources/webjars/]]
2022-08-05 00:06:31.037 TRACE 22316 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/**] onto ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2022-08-05 00:06:31.037 DEBUG 22316 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2022-08-05 00:06:31.346  INFO 22316 --- [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4199ed5, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@5b086631], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@30ebf809]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@5723755b], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-08-05 00:06:31.669  INFO 22316 --- [cluster-rtt-ClusterId{value='62ebfc974c38681dc5685c98', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:2, serverValue:100}] to localhost:27017
2022-08-05 00:06:31.669  INFO 22316 --- [cluster-ClusterId{value='62ebfc974c38681dc5685c98', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:1, serverValue:99}] to localhost:27017
2022-08-05 00:06:31.673  INFO 22316 --- [cluster-ClusterId{value='62ebfc974c38681dc5685c98', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=81808800}
2022-08-05 00:06:31.814  INFO 22316 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-08-05 00:06:31.864 DEBUG 22316 --- [restartedMain] o.s.w.r.r.m.a.ControllerMethodResolver   : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2022-08-05 00:06:31.910 DEBUG 22316 --- [restartedMain] o.s.w.s.adapter.HttpWebHandlerAdapter    : enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2022-08-05 00:06:32.422  INFO 22316 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-08-05 00:06:32.486  INFO 22316 --- [restartedMain] o.s.b.web.embedded.netty.NettyWebServer  : Netty started on port 8080
2022-08-05 00:06:32.510  INFO 22316 --- [restartedMain] c.l.l.OxfordApplication                  : Started OxfordApplication in 5.701 seconds (JVM running for 7.145)
2022-08-05 00:06:33.104  INFO 22316 --- [nioEventLoopGroup-5-3] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:3, serverValue:101}] to localhost:27017
2022-08-05 00:06:37.585 TRACE 22316 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [bc5b5777-1] HTTP GET "/api/translation/v1/translate/raw?workId=dick&sourceLang=en&targetLang=ar", headers={masked}
2022-08-05 00:06:37.604 DEBUG 22316 --- [reactor-http-nio-2] s.w.r.r.m.a.RequestMappingHandlerMapping : [bc5b5777-1] Mapped to com.liem.languageintergration.controller.TranslationController#translateRaw(String, String, String)
2022-08-05 00:06:37.632  INFO 22316 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start API --- TranslationController.translateRaw ---
2022-08-05 00:06:37.641  INFO 22316 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start Service --- OxfordTranslationService.translate ---
2022-08-05 00:06:37.685  INFO 22316 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End Service --- OxfordTranslationService.translate --- in [43] ms
2022-08-05 00:06:37.686  INFO 22316 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End API --- TranslationController.translateRaw --- in [52] ms
2022-08-05 00:06:37.709 TRACE 22316 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [17b75c7c] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dick, headers={masked}
2022-08-05 00:06:39.158 TRACE 22316 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [17b75c7c] [79e63d56-1] Response 200 OK, headers={masked}
2022-08-05 00:06:39.236 TRACE 22316 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [17b75c7c] [79e63d56-1] Decoded [TranslationDto(id=dick, metadata=MetadataDto(operation=translations, provider=Oxford University Press, schema=RetrieveTranslations), results=[TranslationEntryDto(id=dick, language=en, type=headword, lexicalEntries=[LexicalEntryDto(entries=[LexicalEntryDetailDto(pronunciations=[{audioFile=https://audio.oxforddictionaries.com/en/mp3/dick_gb_1.mp3, dialects=[British English], phoneticNotation=IPA, phoneticSpelling=dɪk}, {audioFile=https://audio.oxforddictionaries.com/en/mp3/dick_us_1.mp3, dialects=[American English], phoneticNotation=IPA, phoneticSpelling=dɪk}], senses=[SenseDto(id=b-en-ar0006061.002, notes=null, registers=[{id=vulgar_slang, text=Vulgar_Slang}], translations=[{language=ar, text=‫زُبّ‬}])])], language=en, lexicalCategory=KeyValueDto(id=noun, text=Noun), text=dick)], word=dick)], word=dick)]
2022-08-05 00:06:39.238  INFO 22316 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Request to Oxford success
2022-08-05 00:06:39.243 DEBUG 22316 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [bc5b5777-1] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2022-08-05 00:06:39.243 DEBUG 22316 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [bc5b5777-1] 0..1 [com.liem.languageintergration.dto.responses.ApiResponse<com.liem.languageintergration.dto.oxford.TranslationDto>]
2022-08-05 00:06:39.251 TRACE 22316 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [bc5b5777-1] Encoding [ApiResponse(code=000000, message=Success, response=TranslationDto(id=dick, metadata=MetadataDto(operation=translations, provider=Oxford University Press, schema=RetrieveTranslations), results=[TranslationEntryDto(id=dick, language=en, type=headword, lexicalEntries=[LexicalEntryDto(entries=[LexicalEntryDetailDto(pronunciations=[{audioFile=https://audio.oxforddictionaries.com/en/mp3/dick_gb_1.mp3, dialects=[British English], phoneticNotation=IPA, phoneticSpelling=dɪk}, {audioFile=https://audio.oxforddictionaries.com/en/mp3/dick_us_1.mp3, dialects=[American English], phoneticNotation=IPA, phoneticSpelling=dɪk}], senses=[SenseDto(id=b-en-ar0006061.002, notes=null, registers=[{id=vulgar_slang, text=Vulgar_Slang}], translations=[{language=ar, text=‫زُبّ‬}])])], language=en, lexicalCategory=KeyValueDto(id=noun, text=Noun), text=dick)], word=dick)], word=dick), timestamp=2022-08-05T00:06:39.239687400)]
2022-08-05 00:06:39.274 TRACE 22316 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [bc5b5777-1] Completed 200 OK, headers={masked}
2022-08-05 00:06:39.276 TRACE 22316 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [bc5b5777-1, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:61237] Handling completed
2022-08-05 00:13:00.401  INFO 22136 --- [restartedMain] c.l.l.OxfordApplication                  : Starting OxfordApplication using Java 11.0.12 on DESKTOP-6L79JE3 with PID 22136 (D:\Work\Xperia\oxford\target\classes started by Liem in D:\Work\Xperia\oxford)
2022-08-05 00:13:00.402 DEBUG 22136 --- [restartedMain] c.l.l.OxfordApplication                  : Running with Spring Boot v2.7.2, Spring v5.3.22
2022-08-05 00:13:00.405  INFO 22136 --- [restartedMain] c.l.l.OxfordApplication                  : No active profile set, falling back to 1 default profile: "default"
2022-08-05 00:13:00.501  INFO 22136 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-08-05 00:13:00.501  INFO 22136 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-08-05 00:13:01.647  INFO 22136 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:13:01.648  INFO 22136 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-08-05 00:13:01.666  INFO 22136 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 0 Reactive MongoDB repository interfaces.
2022-08-05 00:13:02.097  INFO 22136 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:13:02.098  INFO 22136 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-08-05 00:13:02.113  INFO 22136 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2022-08-05 00:13:04.066 TRACE 22136 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	c.l.l.c.TranslationController:
	{GET /translate}: translate(String,String,String)
	{GET /translate/raw}: translateRaw(String,String,String)
2022-08-05 00:13:04.087 TRACE 22136 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.a.OpenApiWebfluxResource:
	{GET /v3/api-docs, produces [application/json]}: openapiJson(ServerHttpRequest,String,Locale)
	{GET /v3/api-docs.yaml, produces [application/vnd.oai.openapi]}: openapiYaml(ServerHttpRequest,String,Locale)
2022-08-05 00:13:04.089 TRACE 22136 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerWelcomeWebFlux:
	{GET /swagger-ui.html}: redirectToUi(ServerHttpRequest,ServerHttpResponse)
2022-08-05 00:13:04.091 TRACE 22136 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerConfigResource:
	{GET /v3/api-docs/swagger-config, produces [application/json]}: getSwaggerUiConfig(ServerHttpRequest)
2022-08-05 00:13:04.094 DEBUG 22136 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 6 mappings in 'requestMappingHandlerMapping'
2022-08-05 00:13:04.108 TRACE 22136 --- [restartedMain] o.s.w.r.f.s.s.RouterFunctionMapping      : 0 RouterFunction(s) in 'routerFunctionMapping'
2022-08-05 00:13:04.560 TRACE 22136 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/webjars/**] onto ResourceWebHandler [classpath [META-INF/resources/webjars/]]
2022-08-05 00:13:04.561 TRACE 22136 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/**] onto ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2022-08-05 00:13:04.561 DEBUG 22136 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2022-08-05 00:13:04.844  INFO 22136 --- [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3643f95d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@636cd98], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@68042e8b]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@777af3c9], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-08-05 00:13:05.193  INFO 22136 --- [cluster-rtt-ClusterId{value='62ebfe2053c5f510b474906b', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:2, serverValue:102}] to localhost:27017
2022-08-05 00:13:05.193  INFO 22136 --- [cluster-ClusterId{value='62ebfe2053c5f510b474906b', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:1, serverValue:103}] to localhost:27017
2022-08-05 00:13:05.195  INFO 22136 --- [cluster-ClusterId{value='62ebfe2053c5f510b474906b', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=89596700}
2022-08-05 00:13:05.319  INFO 22136 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-08-05 00:13:05.369 DEBUG 22136 --- [restartedMain] o.s.w.r.r.m.a.ControllerMethodResolver   : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2022-08-05 00:13:05.416 DEBUG 22136 --- [restartedMain] o.s.w.s.adapter.HttpWebHandlerAdapter    : enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2022-08-05 00:13:05.943  INFO 22136 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-08-05 00:13:06.005  INFO 22136 --- [restartedMain] o.s.b.web.embedded.netty.NettyWebServer  : Netty started on port 8080
2022-08-05 00:13:06.030  INFO 22136 --- [restartedMain] c.l.l.OxfordApplication                  : Started OxfordApplication in 6.267 seconds (JVM running for 7.923)
2022-08-05 00:13:06.858  INFO 22136 --- [nioEventLoopGroup-5-3] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:3, serverValue:104}] to localhost:27017
2022-08-05 00:13:31.187 TRACE 22136 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [7b1290d9-1] HTTP GET "/api/translation/v1/translate?workId=dick&sourceLang=en&targetLang=ar", headers={masked}
2022-08-05 00:13:31.206 DEBUG 22136 --- [reactor-http-nio-2] s.w.r.r.m.a.RequestMappingHandlerMapping : [7b1290d9-1] Mapped to com.liem.languageintergration.controller.TranslationController#translate(String, String, String)
2022-08-05 00:13:31.234  INFO 22136 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start API --- TranslationController.translate ---
2022-08-05 00:13:31.243  INFO 22136 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start Service --- OxfordTranslationService.translate ---
2022-08-05 00:13:31.285  INFO 22136 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End Service --- OxfordTranslationService.translate --- in [41] ms
2022-08-05 00:13:31.286  INFO 22136 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End API --- TranslationController.translate --- in [50] ms
2022-08-05 00:13:31.311 TRACE 22136 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [6582ee14] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dick, headers={masked}
2022-08-05 00:13:32.827 TRACE 22136 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [6582ee14] [c0c21fbd-1] Response 200 OK, headers={masked}
2022-08-05 00:13:32.903 TRACE 22136 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [6582ee14] [c0c21fbd-1] Decoded [TranslationDto(id=dick, metadata=MetadataDto(operation=translations, provider=Oxford University Press, schema=RetrieveTranslations), results=[TranslationEntryDto(id=dick, language=en, type=headword, lexicalEntries=[LexicalEntryDto(entries=[LexicalEntryDetailDto(pronunciations=[{audioFile=https://audio.oxforddictionaries.com/en/mp3/dick_gb_1.mp3, dialects=[British English], phoneticNotation=IPA, phoneticSpelling=dɪk}, {audioFile=https://audio.oxforddictionaries.com/en/mp3/dick_us_1.mp3, dialects=[American English], phoneticNotation=IPA, phoneticSpelling=dɪk}], senses=[SenseDto(id=b-en-ar0006061.002, notes=null, registers=[{id=vulgar_slang, text=Vulgar_Slang}], translations=[{language=ar, text=‫زُبّ‬}])])], language=en, lexicalCategory=KeyValueDto(id=noun, text=Noun), text=dick)], word=dick)], word=dick)]
2022-08-05 00:13:32.905  INFO 22136 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Request to Oxford success
2022-08-05 00:13:32.912 DEBUG 22136 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [7b1290d9-1] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2022-08-05 00:13:32.912 DEBUG 22136 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [7b1290d9-1] 0..1 [com.liem.languageintergration.dto.responses.ApiResponse<com.liem.languageintergration.dto.responses.TranslationResponseDto>]
2022-08-05 00:13:32.919 TRACE 22136 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [7b1290d9-1] Encoding [ApiResponse(code=000000, message=Success, response=TranslationResponseDto(wordInSourceLanguage=dick, translations=[com.liem.languageintergration.dto.responses.TranslationDetailDto@1557a18]), timestamp=2022-08-05T00:13:32.908590400)]
2022-08-05 00:13:32.936 TRACE 22136 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [7b1290d9-1] Completed 200 OK, headers={masked}
2022-08-05 00:13:32.937 TRACE 22136 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [7b1290d9-1, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:61420] Handling completed
2022-08-05 00:13:52.079 TRACE 22136 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [7b1290d9-2] HTTP GET "/api/translation/v1/translate?workId=dick%3B%3B&sourceLang=en&targetLang=ar", headers={masked}
2022-08-05 00:13:52.080 DEBUG 22136 --- [reactor-http-nio-2] s.w.r.r.m.a.RequestMappingHandlerMapping : [7b1290d9-2] Mapped to com.liem.languageintergration.controller.TranslationController#translate(String, String, String)
2022-08-05 00:13:52.082  INFO 22136 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start API --- TranslationController.translate ---
2022-08-05 00:13:52.082  INFO 22136 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start Service --- OxfordTranslationService.translate ---
2022-08-05 00:13:52.083  INFO 22136 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End Service --- OxfordTranslationService.translate --- in [0] ms
2022-08-05 00:13:52.084  INFO 22136 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End API --- TranslationController.translate --- in [1] ms
2022-08-05 00:13:52.085 TRACE 22136 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [188a87fd] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dick;;, headers={masked}
2022-08-05 00:13:52.326 TRACE 22136 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [188a87fd] [c0c21fbd-2] Response 200 OK, headers={masked}
2022-08-05 00:13:52.327 TRACE 22136 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [188a87fd] [c0c21fbd-2] Decoded [TranslationDto(id=dick, metadata=MetadataDto(operation=translations, provider=Oxford University Press, schema=RetrieveTranslations), results=[TranslationEntryDto(id=dick, language=en, type=headword, lexicalEntries=[LexicalEntryDto(entries=[LexicalEntryDetailDto(pronunciations=[{audioFile=https://audio.oxforddictionaries.com/en/mp3/dick_gb_1.mp3, dialects=[British English], phoneticNotation=IPA, phoneticSpelling=dɪk}, {audioFile=https://audio.oxforddictionaries.com/en/mp3/dick_us_1.mp3, dialects=[American English], phoneticNotation=IPA, phoneticSpelling=dɪk}], senses=[SenseDto(id=b-en-ar0006061.002, notes=null, registers=[{id=vulgar_slang, text=Vulgar_Slang}], translations=[{language=ar, text=‫زُبّ‬}])])], language=en, lexicalCategory=KeyValueDto(id=noun, text=Noun), text=dick)], word=dick)], word=dick)]
2022-08-05 00:13:52.328  INFO 22136 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Request to Oxford success
2022-08-05 00:13:52.329 DEBUG 22136 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [7b1290d9-2] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2022-08-05 00:13:52.329 DEBUG 22136 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [7b1290d9-2] 0..1 [com.liem.languageintergration.dto.responses.ApiResponse<com.liem.languageintergration.dto.responses.TranslationResponseDto>]
2022-08-05 00:13:52.330 TRACE 22136 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [7b1290d9-2] Encoding [ApiResponse(code=000000, message=Success, response=TranslationResponseDto(wordInSourceLanguage=dick, translations=[com.liem.languageintergration.dto.responses.TranslationDetailDto@76ec0b6b]), timestamp=2022-08-05T00:13:52.329690)]
2022-08-05 00:13:52.331 TRACE 22136 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [7b1290d9-2] Completed 200 OK, headers={masked}
2022-08-05 00:13:52.331 TRACE 22136 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [7b1290d9-2, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:61420] Handling completed
2022-08-05 00:13:54.840 TRACE 22136 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [7b1290d9-3] HTTP GET "/api/translation/v1/translate?workId=dick%3B%3B&sourceLang=en&targetLang=ar", headers={masked}
2022-08-05 00:13:54.841 DEBUG 22136 --- [reactor-http-nio-2] s.w.r.r.m.a.RequestMappingHandlerMapping : [7b1290d9-3] Mapped to com.liem.languageintergration.controller.TranslationController#translate(String, String, String)
2022-08-05 00:13:54.842  INFO 22136 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start API --- TranslationController.translate ---
2022-08-05 00:13:54.842  INFO 22136 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start Service --- OxfordTranslationService.translate ---
2022-08-05 00:13:54.843  INFO 22136 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End Service --- OxfordTranslationService.translate --- in [0] ms
2022-08-05 00:13:54.843  INFO 22136 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End API --- TranslationController.translate --- in [0] ms
2022-08-05 00:13:54.844 TRACE 22136 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [3a15cf24] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dick;;, headers={masked}
2022-08-05 00:13:55.080 TRACE 22136 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [3a15cf24] [c0c21fbd-3] Response 200 OK, headers={masked}
2022-08-05 00:13:55.083 TRACE 22136 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [3a15cf24] [c0c21fbd-3] Decoded [TranslationDto(id=dick, metadata=MetadataDto(operation=translations, provider=Oxford University Press, schema=RetrieveTranslations), results=[TranslationEntryDto(id=dick, language=en, type=headword, lexicalEntries=[LexicalEntryDto(entries=[LexicalEntryDetailDto(pronunciations=[{audioFile=https://audio.oxforddictionaries.com/en/mp3/dick_gb_1.mp3, dialects=[British English], phoneticNotation=IPA, phoneticSpelling=dɪk}, {audioFile=https://audio.oxforddictionaries.com/en/mp3/dick_us_1.mp3, dialects=[American English], phoneticNotation=IPA, phoneticSpelling=dɪk}], senses=[SenseDto(id=b-en-ar0006061.002, notes=null, registers=[{id=vulgar_slang, text=Vulgar_Slang}], translations=[{language=ar, text=‫زُبّ‬}])])], language=en, lexicalCategory=KeyValueDto(id=noun, text=Noun), text=dick)], word=dick)], word=dick)]
2022-08-05 00:13:55.083  INFO 22136 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Request to Oxford success
2022-08-05 00:13:55.084 DEBUG 22136 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [7b1290d9-3] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2022-08-05 00:13:55.084 DEBUG 22136 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [7b1290d9-3] 0..1 [com.liem.languageintergration.dto.responses.ApiResponse<com.liem.languageintergration.dto.responses.TranslationResponseDto>]
2022-08-05 00:13:55.085 TRACE 22136 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [7b1290d9-3] Encoding [ApiResponse(code=000000, message=Success, response=TranslationResponseDto(wordInSourceLanguage=dick, translations=[com.liem.languageintergration.dto.responses.TranslationDetailDto@30c8a917]), timestamp=2022-08-05T00:13:55.084879100)]
2022-08-05 00:13:55.086 TRACE 22136 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [7b1290d9-3] Completed 200 OK, headers={masked}
2022-08-05 00:13:55.086 TRACE 22136 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [7b1290d9-3, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:61420] Handling completed
2022-08-05 00:13:59.992 TRACE 22136 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [7b1290d9-4] HTTP GET "/api/translation/v1/translate?workId=dickxfgdf&sourceLang=en&targetLang=ar", headers={masked}
2022-08-05 00:13:59.993 DEBUG 22136 --- [reactor-http-nio-2] s.w.r.r.m.a.RequestMappingHandlerMapping : [7b1290d9-4] Mapped to com.liem.languageintergration.controller.TranslationController#translate(String, String, String)
2022-08-05 00:13:59.995  INFO 22136 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start API --- TranslationController.translate ---
2022-08-05 00:13:59.995  INFO 22136 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start Service --- OxfordTranslationService.translate ---
2022-08-05 00:13:59.996  INFO 22136 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End Service --- OxfordTranslationService.translate --- in [0] ms
2022-08-05 00:13:59.996  INFO 22136 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End API --- TranslationController.translate --- in [0] ms
2022-08-05 00:13:59.996 TRACE 22136 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [13b42867] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:14:00.290 TRACE 22136 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [13b42867] [c0c21fbd-4] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:14:00.294 DEBUG 22136 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [13b42867] [c0c21fbd-4] Read 84 bytes
2022-08-05 00:14:00.308 TRACE 22136 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [13b42867] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:14:01.062 TRACE 22136 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [13b42867] [1770c1d7-1] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:14:01.063 DEBUG 22136 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [13b42867] [1770c1d7-1] Read 84 bytes
2022-08-05 00:14:01.064 TRACE 22136 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [13b42867] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:14:01.347 TRACE 22136 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [13b42867] [c0c21fbd-5] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:14:01.350 DEBUG 22136 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [13b42867] [c0c21fbd-5] Read 84 bytes
2022-08-05 00:14:01.351 TRACE 22136 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [13b42867] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:14:01.635 TRACE 22136 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [13b42867] [1770c1d7-2] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:14:01.636 DEBUG 22136 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [13b42867] [1770c1d7-2] Read 84 bytes
2022-08-05 00:14:01.653 TRACE 22136 --- [reactor-http-nio-2] o.s.w.r.function.server.RouterFunctions  : [7b1290d9-4] Matched org.springframework.web.reactive.function.server.RequestPredicates$$Lambda$1621/0x0000000800a3a840@231319d2
2022-08-05 00:14:01.659 DEBUG 22136 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [7b1290d9-4] Resolved [NotFound: 404 Not Found from GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf] for HTTP GET /translate
2022-08-05 00:14:01.667 ERROR 22136 --- [reactor-http-nio-2] a.w.r.e.AbstractErrorWebExceptionHandler : [7b1290d9-4]  500 Server Error for HTTP GET "/translate?workId=dickxfgdf&sourceLang=en&targetLang=ar"

org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:202) ~[spring-webflux-5.3.22.jar:5.3.22]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 from GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf [DefaultWebClient]
	*__checkpoint ⇢ Handler com.liem.languageintergration.controller.TranslationController#translate(String, String, String) [DispatcherHandler]
	*__checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/api/translation/v1/translate?workId=dickxfgdf&sourceLang=en&targetLang=ar" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:202) ~[spring-webflux-5.3.22.jar:5.3.22]
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:207) ~[spring-webflux-5.3.22.jar:5.3.22]
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:101) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:400) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:419) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:473) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:703) ~[reactor-netty-http-1.0.21.jar:1.0.21]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:299) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:510) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:449) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.79.Final.jar:4.1.79.Final]
		at java.base/java.lang.Thread.run(Thread.java:829) ~[na:na]

2022-08-05 00:14:01.673 TRACE 22136 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [7b1290d9-4] Encoding [{timestamp=Fri Aug 05 00:14:01 ICT 2022, path=/translate, status=500, error=Internal Server Error, message=404 Not Found from GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, requestId=7b1290d9-4, trace=org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:202)
	Suppressed: The stacktrace has been enhanced by Reactor, refer to additional information below: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 from GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf [DefaultWebClient]
	*__checkpoint ⇢ Handler com.liem.languageintergration.controller.TranslationController#translate(String, String, String) [DispatcherHandler]
	*__checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/api/translation/v1/translate?workId=dickxfgdf&sourceLang=en&targetLang=ar" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:202)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:207)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:101)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:400)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:419)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:473)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:703)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:299)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:510)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:449)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:829)
}]
2022-08-05 00:14:01.679 TRACE 22136 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [7b1290d9-4] Completed 500 INTERNAL_SERVER_ERROR, headers={masked}
2022-08-05 00:14:01.680 TRACE 22136 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [7b1290d9-4, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:61420] Handling completed
2022-08-05 00:16:17.884 TRACE 22136 --- [reactor-http-nio-3] o.s.w.s.adapter.HttpWebHandlerAdapter    : [2d1d0f93-5] HTTP GET "/api/translation/v1/translate?workId=dickxfgdf&sourceLang=en&targetLang=ar", headers={masked}
2022-08-05 00:16:17.886 DEBUG 22136 --- [reactor-http-nio-3] s.w.r.r.m.a.RequestMappingHandlerMapping : [2d1d0f93-5] Mapped to com.liem.languageintergration.controller.TranslationController#translate(String, String, String)
2022-08-05 00:16:17.887  INFO 22136 --- [reactor-http-nio-3] c.l.l.utils.log.LoggingUtility           : Start API --- TranslationController.translate ---
2022-08-05 00:16:17.887  INFO 22136 --- [reactor-http-nio-3] c.l.l.utils.log.LoggingUtility           : Start Service --- OxfordTranslationService.translate ---
2022-08-05 00:16:17.887  INFO 22136 --- [reactor-http-nio-3] c.l.l.utils.log.LoggingUtility           : End Service --- OxfordTranslationService.translate --- in [0] ms
2022-08-05 00:16:17.888  INFO 22136 --- [reactor-http-nio-3] c.l.l.utils.log.LoggingUtility           : End API --- TranslationController.translate --- in [0] ms
2022-08-05 00:16:17.888 TRACE 22136 --- [reactor-http-nio-3] o.s.w.r.f.client.ExchangeFunctions       : [567920e3] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:16:18.968 TRACE 22136 --- [reactor-http-nio-3] o.s.w.r.f.client.ExchangeFunctions       : [567920e3] [be7064f6-1] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:16:18.968 DEBUG 22136 --- [reactor-http-nio-3] org.springframework.web.HttpLogging      : [567920e3] [be7064f6-1] Read 84 bytes
2022-08-05 00:16:18.969 TRACE 22136 --- [reactor-http-nio-3] o.s.w.r.f.client.ExchangeFunctions       : [567920e3] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:16:19.687 TRACE 22136 --- [reactor-http-nio-3] o.s.w.r.f.client.ExchangeFunctions       : [567920e3] [3d93c4c8-1] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:16:19.688 DEBUG 22136 --- [reactor-http-nio-3] org.springframework.web.HttpLogging      : [567920e3] [3d93c4c8-1] Read 84 bytes
2022-08-05 00:16:19.688 TRACE 22136 --- [reactor-http-nio-3] o.s.w.r.f.client.ExchangeFunctions       : [567920e3] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:16:19.958 TRACE 22136 --- [reactor-http-nio-3] o.s.w.r.f.client.ExchangeFunctions       : [567920e3] [be7064f6-2] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:16:19.959 DEBUG 22136 --- [reactor-http-nio-3] org.springframework.web.HttpLogging      : [567920e3] [be7064f6-2] Read 84 bytes
2022-08-05 00:16:19.960 TRACE 22136 --- [reactor-http-nio-3] o.s.w.r.f.client.ExchangeFunctions       : [567920e3] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:16:20.228 TRACE 22136 --- [reactor-http-nio-3] o.s.w.r.f.client.ExchangeFunctions       : [567920e3] [3d93c4c8-2] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:16:20.229 DEBUG 22136 --- [reactor-http-nio-3] org.springframework.web.HttpLogging      : [567920e3] [3d93c4c8-2] Read 84 bytes
2022-08-05 00:16:20.230 TRACE 22136 --- [reactor-http-nio-3] o.s.w.r.function.server.RouterFunctions  : [2d1d0f93-5] Matched org.springframework.web.reactive.function.server.RequestPredicates$$Lambda$1621/0x0000000800a3a840@231319d2
2022-08-05 00:16:20.231 DEBUG 22136 --- [reactor-http-nio-3] org.springframework.web.HttpLogging      : [2d1d0f93-5] Resolved [NotFound: 404 Not Found from GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf] for HTTP GET /translate
2022-08-05 00:16:20.235 ERROR 22136 --- [reactor-http-nio-3] a.w.r.e.AbstractErrorWebExceptionHandler : [2d1d0f93-5]  500 Server Error for HTTP GET "/translate?workId=dickxfgdf&sourceLang=en&targetLang=ar"

org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:202) ~[spring-webflux-5.3.22.jar:5.3.22]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 from GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf [DefaultWebClient]
	*__checkpoint ⇢ Handler com.liem.languageintergration.controller.TranslationController#translate(String, String, String) [DispatcherHandler]
	*__checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/api/translation/v1/translate?workId=dickxfgdf&sourceLang=en&targetLang=ar" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:202) ~[spring-webflux-5.3.22.jar:5.3.22]
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:207) ~[spring-webflux-5.3.22.jar:5.3.22]
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:101) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:400) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:419) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:473) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:703) ~[reactor-netty-http-1.0.21.jar:1.0.21]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:299) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:510) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:449) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.79.Final.jar:4.1.79.Final]
		at java.base/java.lang.Thread.run(Thread.java:829) ~[na:na]

2022-08-05 00:16:20.236 TRACE 22136 --- [reactor-http-nio-3] org.springframework.web.HttpLogging      : [2d1d0f93-5] Encoding [{timestamp=Fri Aug 05 00:16:20 ICT 2022, path=/translate, status=500, error=Internal Server Error, message=404 Not Found from GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, requestId=2d1d0f93-5, trace=org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:202)
	Suppressed: The stacktrace has been enhanced by Reactor, refer to additional information below: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 from GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf [DefaultWebClient]
	*__checkpoint ⇢ Handler com.liem.languageintergration.controller.TranslationController#translate(String, String, String) [DispatcherHandler]
	*__checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/api/translation/v1/translate?workId=dickxfgdf&sourceLang=en&targetLang=ar" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:202)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:207)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:101)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:400)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:419)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:473)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:703)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:299)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:510)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:449)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:829)
}]
2022-08-05 00:16:20.239 TRACE 22136 --- [reactor-http-nio-3] o.s.w.s.adapter.HttpWebHandlerAdapter    : [2d1d0f93-5] Completed 500 INTERNAL_SERVER_ERROR, headers={masked}
2022-08-05 00:16:20.239 TRACE 22136 --- [reactor-http-nio-3] org.springframework.web.HttpLogging      : [2d1d0f93-1, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:61448] Handling completed
2022-08-05 00:24:00.289  INFO 21012 --- [restartedMain] c.l.l.OxfordApplication                  : Starting OxfordApplication using Java 11.0.12 on DESKTOP-6L79JE3 with PID 21012 (D:\Work\Xperia\oxford\target\classes started by Liem in D:\Work\Xperia\oxford)
2022-08-05 00:24:00.291 DEBUG 21012 --- [restartedMain] c.l.l.OxfordApplication                  : Running with Spring Boot v2.7.2, Spring v5.3.22
2022-08-05 00:24:00.291  INFO 21012 --- [restartedMain] c.l.l.OxfordApplication                  : No active profile set, falling back to 1 default profile: "default"
2022-08-05 00:24:00.346  INFO 21012 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-08-05 00:24:00.346  INFO 21012 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-08-05 00:24:01.308  INFO 21012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:24:01.310  INFO 21012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-08-05 00:24:01.337  INFO 21012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 0 Reactive MongoDB repository interfaces.
2022-08-05 00:24:01.828  INFO 21012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:24:01.829  INFO 21012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-08-05 00:24:01.844  INFO 21012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2022-08-05 00:24:03.734 TRACE 21012 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	c.l.l.c.TranslationController:
	{GET /translate}: translate(String,String,String)
	{GET /translate/raw}: translateRaw(String,String,String)
2022-08-05 00:24:03.752 TRACE 21012 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.a.OpenApiWebfluxResource:
	{GET /v3/api-docs, produces [application/json]}: openapiJson(ServerHttpRequest,String,Locale)
	{GET /v3/api-docs.yaml, produces [application/vnd.oai.openapi]}: openapiYaml(ServerHttpRequest,String,Locale)
2022-08-05 00:24:03.754 TRACE 21012 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerWelcomeWebFlux:
	{GET /swagger-ui.html}: redirectToUi(ServerHttpRequest,ServerHttpResponse)
2022-08-05 00:24:03.755 TRACE 21012 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerConfigResource:
	{GET /v3/api-docs/swagger-config, produces [application/json]}: getSwaggerUiConfig(ServerHttpRequest)
2022-08-05 00:24:03.758 DEBUG 21012 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 6 mappings in 'requestMappingHandlerMapping'
2022-08-05 00:24:03.772 TRACE 21012 --- [restartedMain] o.s.w.r.f.s.s.RouterFunctionMapping      : 0 RouterFunction(s) in 'routerFunctionMapping'
2022-08-05 00:24:04.161 TRACE 21012 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/webjars/**] onto ResourceWebHandler [classpath [META-INF/resources/webjars/]]
2022-08-05 00:24:04.161 TRACE 21012 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/**] onto ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2022-08-05 00:24:04.161 DEBUG 21012 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2022-08-05 00:24:04.429  INFO 21012 --- [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@37718d2d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@bede725], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@70a24c5a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@11aa4ebd], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-08-05 00:24:04.767  INFO 21012 --- [cluster-ClusterId{value='62ec00b4c7ef953d2d59d21f', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:2, serverValue:106}] to localhost:27017
2022-08-05 00:24:04.767  INFO 21012 --- [cluster-rtt-ClusterId{value='62ec00b4c7ef953d2d59d21f', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:1, serverValue:105}] to localhost:27017
2022-08-05 00:24:04.769  INFO 21012 --- [cluster-ClusterId{value='62ec00b4c7ef953d2d59d21f', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=82540200}
2022-08-05 00:24:04.886  INFO 21012 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-08-05 00:24:04.938 DEBUG 21012 --- [restartedMain] o.s.w.r.r.m.a.ControllerMethodResolver   : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2022-08-05 00:24:04.981 DEBUG 21012 --- [restartedMain] o.s.w.s.adapter.HttpWebHandlerAdapter    : enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2022-08-05 00:24:05.477  INFO 21012 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-08-05 00:24:05.540  INFO 21012 --- [restartedMain] o.s.b.web.embedded.netty.NettyWebServer  : Netty started on port 8080
2022-08-05 00:24:05.562  INFO 21012 --- [restartedMain] c.l.l.OxfordApplication                  : Started OxfordApplication in 5.795 seconds (JVM running for 7.077)
2022-08-05 00:24:06.264  INFO 21012 --- [nioEventLoopGroup-5-3] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:3, serverValue:107}] to localhost:27017
2022-08-05 00:24:13.870 TRACE 21012 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [67b73f73-1] HTTP GET "/api/translation/v1/translate?workId=dickxfgdf&sourceLang=en&targetLang=ar", headers={masked}
2022-08-05 00:24:13.889 DEBUG 21012 --- [reactor-http-nio-2] s.w.r.r.m.a.RequestMappingHandlerMapping : [67b73f73-1] Mapped to com.liem.languageintergration.controller.TranslationController#translate(String, String, String)
2022-08-05 00:24:13.917  INFO 21012 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start API --- TranslationController.translate ---
2022-08-05 00:24:13.925  INFO 21012 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start Service --- OxfordTranslationService.translate ---
2022-08-05 00:24:13.967  INFO 21012 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End Service --- OxfordTranslationService.translate --- in [40] ms
2022-08-05 00:24:13.968  INFO 21012 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End API --- TranslationController.translate --- in [49] ms
2022-08-05 00:24:13.992 TRACE 21012 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [409e6507] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:24:15.477 TRACE 21012 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [409e6507] [6a31fd88-1] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:24:15.518 ERROR 21012 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@49918400
2022-08-05 00:24:15.530 TRACE 21012 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [409e6507] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:24:16.276 TRACE 21012 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [409e6507] [71dde036-1] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:24:16.277 ERROR 21012 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@49fd2865
2022-08-05 00:24:16.278 TRACE 21012 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [409e6507] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:24:16.549 TRACE 21012 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [409e6507] [6a31fd88-2] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:24:16.550 ERROR 21012 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@50d57c78
2022-08-05 00:24:16.550 TRACE 21012 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [409e6507] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:24:16.819 TRACE 21012 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [409e6507] [71dde036-2] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:24:16.820 ERROR 21012 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@13ef1a53
2022-08-05 00:24:16.836 TRACE 21012 --- [reactor-http-nio-2] o.s.w.r.function.server.RouterFunctions  : [67b73f73-1] Matched org.springframework.web.reactive.function.server.RequestPredicates$$Lambda$1577/0x0000000800a07840@1f2c9373
2022-08-05 00:24:16.844 DEBUG 21012 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [67b73f73-1] Resolved [TranslationException: 404 NOT_FOUND "Error client response"] for HTTP GET /translate
2022-08-05 00:24:16.856 TRACE 21012 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [67b73f73-1] Encoding [{timestamp=Fri Aug 05 00:24:16 ICT 2022, path=/translate, status=404, error=Not Found, message=Error client response, requestId=67b73f73-1, trace=com.liem.languageintergration.excpetions.TranslationException: 404 NOT_FOUND "Error client response"
	at com.liem.languageintergration.service.impl.OxfordTranslationService.lambda$translate$2(OxfordTranslationService.java:77)
	Suppressed: The stacktrace has been enhanced by Reactor, refer to additional information below: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 from GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf [DefaultWebClient]
	*__checkpoint ⇢ Handler com.liem.languageintergration.controller.TranslationController#translate(String, String, String) [DispatcherHandler]
	*__checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/api/translation/v1/translate?workId=dickxfgdf&sourceLang=en&targetLang=ar" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at com.liem.languageintergration.service.impl.OxfordTranslationService.lambda$translate$2(OxfordTranslationService.java:77)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec$StatusHandler.apply(DefaultWebClient.java:695)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.applyStatusHandlers(DefaultWebClient.java:654)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.handleBodyMono(DefaultWebClient.java:623)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.lambda$bodyToMono$2(DefaultWebClient.java:541)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2398)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribeInner(MonoFlatMapMany.java:150)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:189)
		at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onNext(FluxRetryWhen.java:174)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
		at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:432)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:677)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:187)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:444)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:638)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:314)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:435)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:510)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:449)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:829)
}]
2022-08-05 00:24:16.877 TRACE 21012 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [67b73f73-1] Completed 404 NOT_FOUND, headers={masked}
2022-08-05 00:24:16.878 TRACE 21012 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [67b73f73-1, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:61680] Handling completed
2022-08-05 00:35:15.911  INFO 15028 --- [restartedMain] c.l.l.OxfordApplication                  : Starting OxfordApplication using Java 11.0.12 on DESKTOP-6L79JE3 with PID 15028 (D:\Work\Xperia\oxford\target\classes started by Liem in D:\Work\Xperia\oxford)
2022-08-05 00:35:15.912 DEBUG 15028 --- [restartedMain] c.l.l.OxfordApplication                  : Running with Spring Boot v2.7.2, Spring v5.3.22
2022-08-05 00:35:15.913  INFO 15028 --- [restartedMain] c.l.l.OxfordApplication                  : No active profile set, falling back to 1 default profile: "default"
2022-08-05 00:35:15.971  INFO 15028 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-08-05 00:35:15.971  INFO 15028 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-08-05 00:35:16.759  INFO 15028 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:35:16.760  INFO 15028 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-08-05 00:35:16.779  INFO 15028 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 Reactive MongoDB repository interfaces.
2022-08-05 00:35:17.206  INFO 15028 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:35:17.209  INFO 15028 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-08-05 00:35:17.225  INFO 15028 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2022-08-05 00:35:19.209 TRACE 15028 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	c.l.l.c.TranslationController:
	{GET /translate}: translate(String,String,String)
	{GET /translate/raw}: translateRaw(String,String,String)
2022-08-05 00:35:19.230 TRACE 15028 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.a.OpenApiWebfluxResource:
	{GET /v3/api-docs, produces [application/json]}: openapiJson(ServerHttpRequest,String,Locale)
	{GET /v3/api-docs.yaml, produces [application/vnd.oai.openapi]}: openapiYaml(ServerHttpRequest,String,Locale)
2022-08-05 00:35:19.231 TRACE 15028 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerWelcomeWebFlux:
	{GET /swagger-ui.html}: redirectToUi(ServerHttpRequest,ServerHttpResponse)
2022-08-05 00:35:19.233 TRACE 15028 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerConfigResource:
	{GET /v3/api-docs/swagger-config, produces [application/json]}: getSwaggerUiConfig(ServerHttpRequest)
2022-08-05 00:35:19.236 DEBUG 15028 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 6 mappings in 'requestMappingHandlerMapping'
2022-08-05 00:35:19.250 TRACE 15028 --- [restartedMain] o.s.w.r.f.s.s.RouterFunctionMapping      : 0 RouterFunction(s) in 'routerFunctionMapping'
2022-08-05 00:35:19.645 TRACE 15028 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/webjars/**] onto ResourceWebHandler [classpath [META-INF/resources/webjars/]]
2022-08-05 00:35:19.646 TRACE 15028 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/**] onto ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2022-08-05 00:35:19.646 DEBUG 15028 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2022-08-05 00:35:19.935  INFO 15028 --- [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1b2feec7, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@1a8a1f82], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@11081bb5]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@419048e1], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-08-05 00:35:20.279  INFO 15028 --- [cluster-rtt-ClusterId{value='62ec03575c8b4a08f480fbf6', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:2, serverValue:109}] to localhost:27017
2022-08-05 00:35:20.281  INFO 15028 --- [cluster-ClusterId{value='62ec03575c8b4a08f480fbf6', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:1, serverValue:108}] to localhost:27017
2022-08-05 00:35:20.282  INFO 15028 --- [cluster-ClusterId{value='62ec03575c8b4a08f480fbf6', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=80101100}
2022-08-05 00:35:20.407  INFO 15028 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-08-05 00:35:20.471 DEBUG 15028 --- [restartedMain] o.s.w.r.r.m.a.ControllerMethodResolver   : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2022-08-05 00:35:20.520 DEBUG 15028 --- [restartedMain] o.s.w.s.adapter.HttpWebHandlerAdapter    : enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2022-08-05 00:35:21.005  INFO 15028 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-08-05 00:35:21.081  INFO 15028 --- [restartedMain] o.s.b.web.embedded.netty.NettyWebServer  : Netty started on port 8080
2022-08-05 00:35:21.104  INFO 15028 --- [restartedMain] c.l.l.OxfordApplication                  : Started OxfordApplication in 5.706 seconds (JVM running for 6.943)
2022-08-05 00:35:21.590  INFO 15028 --- [nioEventLoopGroup-5-3] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:3, serverValue:110}] to localhost:27017
2022-08-05 00:35:30.313 TRACE 15028 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [ae316e03-1] HTTP GET "/api/translation/v1/translate?workId=dickxfgdf&sourceLang=en&targetLang=ar", headers={masked}
2022-08-05 00:35:30.334 DEBUG 15028 --- [reactor-http-nio-2] s.w.r.r.m.a.RequestMappingHandlerMapping : [ae316e03-1] Mapped to com.liem.languageintergration.controller.TranslationController#translate(String, String, String)
2022-08-05 00:35:30.365  INFO 15028 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start API --- TranslationController.translate ---
2022-08-05 00:35:30.373  INFO 15028 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start Service --- OxfordTranslationService.translate ---
2022-08-05 00:35:30.417  INFO 15028 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End Service --- OxfordTranslationService.translate --- in [42] ms
2022-08-05 00:35:30.418  INFO 15028 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End API --- TranslationController.translate --- in [51] ms
2022-08-05 00:35:30.444 TRACE 15028 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [68794468] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:35:31.883 TRACE 15028 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [68794468] [805d87a0-1] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:35:31.921 ERROR 15028 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@218790ef
2022-08-05 00:35:31.933 TRACE 15028 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [68794468] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:35:32.677 TRACE 15028 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [68794468] [66f7cdc4-1] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:35:32.677 ERROR 15028 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@1827efdf
2022-08-05 00:35:32.678 TRACE 15028 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [68794468] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:35:32.958 TRACE 15028 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [68794468] [805d87a0-2] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:35:32.959 ERROR 15028 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@40a29139
2022-08-05 00:35:32.960 TRACE 15028 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [68794468] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:35:33.227 TRACE 15028 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [68794468] [66f7cdc4-2] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:35:33.228 ERROR 15028 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@7205790
2022-08-05 00:35:33.230 DEBUG 15028 --- [reactor-http-nio-2] s.w.r.r.m.a.RequestMappingHandlerAdapter : [ae316e03-1] Using @ExceptionHandler com.liem.languageintergration.controller.advice.GeneralControllerAdvice#handleTranslateException(TranslationException, WebRequest)
2022-08-05 00:35:33.250 TRACE 15028 --- [reactor-http-nio-2] o.s.w.r.function.server.RouterFunctions  : [ae316e03-1] Matched org.springframework.web.reactive.function.server.RequestPredicates$$Lambda$1597/0x0000000800a07440@6b3f989e
2022-08-05 00:35:33.258 DEBUG 15028 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [ae316e03-1] Resolved [IllegalStateException: Could not resolve parameter [1] in public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.liem.languageintergration.dto.responses.ApiResponse<?>>> com.liem.languageintergration.controller.advice.GeneralControllerAdvice.handleTranslateException(com.liem.languageintergration.excpetions.TranslationException,org.springframework.web.context.request.WebRequest): No suitable resolver] for HTTP GET /translate
2022-08-05 00:35:33.267 ERROR 15028 --- [reactor-http-nio-2] a.w.r.e.AbstractErrorWebExceptionHandler : [ae316e03-1]  500 Server Error for HTTP GET "/translate?workId=dickxfgdf&sourceLang=en&targetLang=ar"

java.lang.IllegalStateException: Could not resolve parameter [1] in public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.liem.languageintergration.dto.responses.ApiResponse<?>>> com.liem.languageintergration.controller.advice.GeneralControllerAdvice.handleTranslateException(com.liem.languageintergration.excpetions.TranslationException,org.springframework.web.context.request.WebRequest): No suitable resolver
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:195) ~[spring-webflux-5.3.22.jar:5.3.22]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/api/translation/v1/translate?workId=dickxfgdf&sourceLang=en&targetLang=ar" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:195) ~[spring-webflux-5.3.22.jar:5.3.22]
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136) ~[spring-webflux-5.3.22.jar:5.3.22]
		at org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.handleException(RequestMappingHandlerAdapter.java:235) ~[spring-webflux-5.3.22.jar:5.3.22]
		at org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$0(RequestMappingHandlerAdapter.java:196) ~[spring-webflux-5.3.22.jar:5.3.22]
		at org.springframework.web.reactive.HandlerResult.applyExceptionHandler(HandlerResult.java:152) ~[spring-webflux-5.3.22.jar:5.3.22]
		at org.springframework.web.reactive.DispatcherHandler.lambda$handleResult$5(DispatcherHandler.java:182) ~[spring-webflux-5.3.22.jar:5.3.22]
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.Operators.error(Operators.java:198) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4397) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.Operators$MonoSubscriber.onError(Operators.java:1863) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber.signalCached(MonoCacheTime.java:340) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber.onError(MonoCacheTime.java:363) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxRetry$RetrySubscriber.onError(FluxRetry.java:95) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2063) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:278) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:231) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:152) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:400) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:419) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:473) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:703) ~[reactor-netty-http-1.0.21.jar:1.0.21]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:299) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:510) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:449) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.79.Final.jar:4.1.79.Final]
		at java.base/java.lang.Thread.run(Thread.java:829) ~[na:na]

2022-08-05 00:35:33.281 TRACE 15028 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [ae316e03-1] Encoding [{timestamp=Fri Aug 05 00:35:33 ICT 2022, path=/translate, status=500, error=Internal Server Error, message=Could not resolve parameter [1] in public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.liem.languageintergration.dto.responses.ApiResponse<?>>> com.liem.languageintergration.controller.advice.GeneralControllerAdvice.handleTranslateException(com.liem.languageintergration.excpetions.TranslationException,org.springframework.web.context.request.WebRequest): No suitable resolver, requestId=ae316e03-1, trace=java.lang.IllegalStateException: Could not resolve parameter [1] in public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.liem.languageintergration.dto.responses.ApiResponse<?>>> com.liem.languageintergration.controller.advice.GeneralControllerAdvice.handleTranslateException(com.liem.languageintergration.excpetions.TranslationException,org.springframework.web.context.request.WebRequest): No suitable resolver
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:195)
	Suppressed: The stacktrace has been enhanced by Reactor, refer to additional information below: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/api/translation/v1/translate?workId=dickxfgdf&sourceLang=en&targetLang=ar" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:195)
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
		at org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.handleException(RequestMappingHandlerAdapter.java:235)
		at org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$0(RequestMappingHandlerAdapter.java:196)
		at org.springframework.web.reactive.HandlerResult.applyExceptionHandler(HandlerResult.java:152)
		at org.springframework.web.reactive.DispatcherHandler.lambda$handleResult$5(DispatcherHandler.java:182)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
		at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4397)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
		at reactor.core.publisher.Operators$MonoSubscriber.onError(Operators.java:1863)
		at reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber.signalCached(MonoCacheTime.java:340)
		at reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber.onError(MonoCacheTime.java:363)
		at reactor.core.publisher.FluxRetry$RetrySubscriber.onError(FluxRetry.java:95)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2063)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:278)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:231)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:152)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:400)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:419)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:473)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:703)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:299)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:510)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:449)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:829)
}]
2022-08-05 00:35:33.300 TRACE 15028 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [ae316e03-1] Completed 500 INTERNAL_SERVER_ERROR, headers={masked}
2022-08-05 00:35:33.301 TRACE 15028 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [ae316e03-1, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:55834] Handling completed
2022-08-05 00:35:43.630 TRACE 15028 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [ae316e03-2] HTTP GET "/api/translation/v1/translate?workId=dickxfgdf&sourceLang=en&targetLang=ar", headers={masked}
2022-08-05 00:35:43.631 DEBUG 15028 --- [reactor-http-nio-2] s.w.r.r.m.a.RequestMappingHandlerMapping : [ae316e03-2] Mapped to com.liem.languageintergration.controller.TranslationController#translate(String, String, String)
2022-08-05 00:35:43.633  INFO 15028 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start API --- TranslationController.translate ---
2022-08-05 00:35:43.633  INFO 15028 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start Service --- OxfordTranslationService.translate ---
2022-08-05 00:35:43.633  INFO 15028 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End Service --- OxfordTranslationService.translate --- in [0] ms
2022-08-05 00:35:43.634  INFO 15028 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End API --- TranslationController.translate --- in [0] ms
2022-08-05 00:35:43.634 TRACE 15028 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [6fce9ff7] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:35:43.892 TRACE 15028 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [6fce9ff7] [805d87a0-3] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:35:43.893 ERROR 15028 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@56a46c6d
2022-08-05 00:35:43.895 TRACE 15028 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [6fce9ff7] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:35:44.166 TRACE 15028 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [6fce9ff7] [66f7cdc4-3] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:35:44.166 ERROR 15028 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@2cd3f025
2022-08-05 00:35:44.167 TRACE 15028 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [6fce9ff7] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:35:44.445 TRACE 15028 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [6fce9ff7] [805d87a0-4] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:35:44.446 ERROR 15028 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@42cb26f9
2022-08-05 00:35:44.447 TRACE 15028 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [6fce9ff7] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:35:44.716 TRACE 15028 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [6fce9ff7] [66f7cdc4-4] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:35:44.716 ERROR 15028 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@45095df2
2022-08-05 00:35:44.718 DEBUG 15028 --- [reactor-http-nio-2] s.w.r.r.m.a.RequestMappingHandlerAdapter : [ae316e03-2] Using @ExceptionHandler com.liem.languageintergration.controller.advice.GeneralControllerAdvice#handleTranslateException(TranslationException, WebRequest)
2022-08-05 00:35:44.718 TRACE 15028 --- [reactor-http-nio-2] o.s.w.r.function.server.RouterFunctions  : [ae316e03-2] Matched org.springframework.web.reactive.function.server.RequestPredicates$$Lambda$1597/0x0000000800a07440@6b3f989e
2022-08-05 00:35:44.719 DEBUG 15028 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [ae316e03-2] Resolved [IllegalStateException: Could not resolve parameter [1] in public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.liem.languageintergration.dto.responses.ApiResponse<?>>> com.liem.languageintergration.controller.advice.GeneralControllerAdvice.handleTranslateException(com.liem.languageintergration.excpetions.TranslationException,org.springframework.web.context.request.WebRequest): No suitable resolver] for HTTP GET /translate
2022-08-05 00:35:44.723 ERROR 15028 --- [reactor-http-nio-2] a.w.r.e.AbstractErrorWebExceptionHandler : [ae316e03-2]  500 Server Error for HTTP GET "/translate?workId=dickxfgdf&sourceLang=en&targetLang=ar"

java.lang.IllegalStateException: Could not resolve parameter [1] in public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.liem.languageintergration.dto.responses.ApiResponse<?>>> com.liem.languageintergration.controller.advice.GeneralControllerAdvice.handleTranslateException(com.liem.languageintergration.excpetions.TranslationException,org.springframework.web.context.request.WebRequest): No suitable resolver
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:195) ~[spring-webflux-5.3.22.jar:5.3.22]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/api/translation/v1/translate?workId=dickxfgdf&sourceLang=en&targetLang=ar" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:195) ~[spring-webflux-5.3.22.jar:5.3.22]
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136) ~[spring-webflux-5.3.22.jar:5.3.22]
		at org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.handleException(RequestMappingHandlerAdapter.java:235) ~[spring-webflux-5.3.22.jar:5.3.22]
		at org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$0(RequestMappingHandlerAdapter.java:196) ~[spring-webflux-5.3.22.jar:5.3.22]
		at org.springframework.web.reactive.HandlerResult.applyExceptionHandler(HandlerResult.java:152) ~[spring-webflux-5.3.22.jar:5.3.22]
		at org.springframework.web.reactive.DispatcherHandler.lambda$handleResult$5(DispatcherHandler.java:182) ~[spring-webflux-5.3.22.jar:5.3.22]
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.Operators.error(Operators.java:198) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4397) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.Operators$MonoSubscriber.onError(Operators.java:1863) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber.signalCached(MonoCacheTime.java:340) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber.onError(MonoCacheTime.java:363) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxRetry$RetrySubscriber.onError(FluxRetry.java:95) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2063) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:278) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:231) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:152) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:400) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:419) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:473) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:703) ~[reactor-netty-http-1.0.21.jar:1.0.21]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:299) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:510) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:449) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.79.Final.jar:4.1.79.Final]
		at java.base/java.lang.Thread.run(Thread.java:829) ~[na:na]

2022-08-05 00:35:44.725 TRACE 15028 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [ae316e03-2] Encoding [{timestamp=Fri Aug 05 00:35:44 ICT 2022, path=/translate, status=500, error=Internal Server Error, message=Could not resolve parameter [1] in public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.liem.languageintergration.dto.responses.ApiResponse<?>>> com.liem.languageintergration.controller.advice.GeneralControllerAdvice.handleTranslateException(com.liem.languageintergration.excpetions.TranslationException,org.springframework.web.context.request.WebRequest): No suitable resolver, requestId=ae316e03-2, trace=java.lang.IllegalStateException: Could not resolve parameter [1] in public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.liem.languageintergration.dto.responses.ApiResponse<?>>> com.liem.languageintergration.controller.advice.GeneralControllerAdvice.handleTranslateException(com.liem.languageintergration.excpetions.TranslationException,org.springframework.web.context.request.WebRequest): No suitable resolver
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:195)
	Suppressed: The stacktrace has been enhanced by Reactor, refer to additional information below: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/api/translation/v1/translate?workId=dickxfgdf&sourceLang=en&targetLang=ar" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:195)
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
		at org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.handleException(RequestMappingHandlerAdapter.java:235)
		at org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$0(RequestMappingHandlerAdapter.java:196)
		at org.springframework.web.reactive.HandlerResult.applyExceptionHandler(HandlerResult.java:152)
		at org.springframework.web.reactive.DispatcherHandler.lambda$handleResult$5(DispatcherHandler.java:182)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
		at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4397)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
		at reactor.core.publisher.Operators$MonoSubscriber.onError(Operators.java:1863)
		at reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber.signalCached(MonoCacheTime.java:340)
		at reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber.onError(MonoCacheTime.java:363)
		at reactor.core.publisher.FluxRetry$RetrySubscriber.onError(FluxRetry.java:95)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2063)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:278)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:231)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:152)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:400)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:419)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:473)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:703)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:299)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:510)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:449)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:829)
}]
2022-08-05 00:35:44.729 TRACE 15028 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [ae316e03-2] Completed 500 INTERNAL_SERVER_ERROR, headers={masked}
2022-08-05 00:35:44.729 TRACE 15028 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [ae316e03-2, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:55834] Handling completed
2022-08-05 00:36:12.496  INFO 20708 --- [restartedMain] c.l.l.OxfordApplication                  : Starting OxfordApplication using Java 11.0.12 on DESKTOP-6L79JE3 with PID 20708 (D:\Work\Xperia\oxford\target\classes started by Liem in D:\Work\Xperia\oxford)
2022-08-05 00:36:12.497 DEBUG 20708 --- [restartedMain] c.l.l.OxfordApplication                  : Running with Spring Boot v2.7.2, Spring v5.3.22
2022-08-05 00:36:12.498  INFO 20708 --- [restartedMain] c.l.l.OxfordApplication                  : No active profile set, falling back to 1 default profile: "default"
2022-08-05 00:36:12.553  INFO 20708 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-08-05 00:36:12.553  INFO 20708 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-08-05 00:36:13.334  INFO 20708 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:36:13.335  INFO 20708 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-08-05 00:36:13.355  INFO 20708 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 Reactive MongoDB repository interfaces.
2022-08-05 00:36:13.738  INFO 20708 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:36:13.739  INFO 20708 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-08-05 00:36:13.754  INFO 20708 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2022-08-05 00:36:15.960 TRACE 20708 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	c.l.l.c.TranslationController:
	{GET /translate}: translate(String,String,String)
	{GET /translate/raw}: translateRaw(String,String,String)
2022-08-05 00:36:15.978 TRACE 20708 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.a.OpenApiWebfluxResource:
	{GET /v3/api-docs, produces [application/json]}: openapiJson(ServerHttpRequest,String,Locale)
	{GET /v3/api-docs.yaml, produces [application/vnd.oai.openapi]}: openapiYaml(ServerHttpRequest,String,Locale)
2022-08-05 00:36:15.980 TRACE 20708 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerWelcomeWebFlux:
	{GET /swagger-ui.html}: redirectToUi(ServerHttpRequest,ServerHttpResponse)
2022-08-05 00:36:15.981 TRACE 20708 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerConfigResource:
	{GET /v3/api-docs/swagger-config, produces [application/json]}: getSwaggerUiConfig(ServerHttpRequest)
2022-08-05 00:36:15.984 DEBUG 20708 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 6 mappings in 'requestMappingHandlerMapping'
2022-08-05 00:36:15.997 TRACE 20708 --- [restartedMain] o.s.w.r.f.s.s.RouterFunctionMapping      : 0 RouterFunction(s) in 'routerFunctionMapping'
2022-08-05 00:36:16.462 TRACE 20708 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/webjars/**] onto ResourceWebHandler [classpath [META-INF/resources/webjars/]]
2022-08-05 00:36:16.463 TRACE 20708 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/**] onto ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2022-08-05 00:36:16.463 DEBUG 20708 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2022-08-05 00:36:16.937  INFO 20708 --- [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5ff5a7c9, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@64836b01], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2dcb0dd7]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@65ee1d96], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-08-05 00:36:17.468  INFO 20708 --- [cluster-ClusterId{value='62ec039023eab97f8bf67801', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:2, serverValue:112}] to localhost:27017
2022-08-05 00:36:17.470  INFO 20708 --- [cluster-rtt-ClusterId{value='62ec039023eab97f8bf67801', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:1, serverValue:111}] to localhost:27017
2022-08-05 00:36:17.472  INFO 20708 --- [cluster-ClusterId{value='62ec039023eab97f8bf67801', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=121015700}
2022-08-05 00:36:17.721  INFO 20708 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-08-05 00:36:17.804 DEBUG 20708 --- [restartedMain] o.s.w.r.r.m.a.ControllerMethodResolver   : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2022-08-05 00:36:17.865 DEBUG 20708 --- [restartedMain] o.s.w.s.adapter.HttpWebHandlerAdapter    : enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2022-08-05 00:36:18.431  INFO 20708 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-08-05 00:36:18.496  INFO 20708 --- [restartedMain] o.s.b.web.embedded.netty.NettyWebServer  : Netty started on port 8080
2022-08-05 00:36:18.521  INFO 20708 --- [restartedMain] c.l.l.OxfordApplication                  : Started OxfordApplication in 6.51 seconds (JVM running for 8.172)
2022-08-05 00:36:19.343  INFO 20708 --- [nioEventLoopGroup-5-3] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:3, serverValue:113}] to localhost:27017
2022-08-05 00:36:39.468  INFO 5252 --- [restartedMain] c.l.l.OxfordApplication                  : Starting OxfordApplication using Java 11.0.12 on DESKTOP-6L79JE3 with PID 5252 (D:\Work\Xperia\oxford\target\classes started by Liem in D:\Work\Xperia\oxford)
2022-08-05 00:36:39.469 DEBUG 5252 --- [restartedMain] c.l.l.OxfordApplication                  : Running with Spring Boot v2.7.2, Spring v5.3.22
2022-08-05 00:36:39.470  INFO 5252 --- [restartedMain] c.l.l.OxfordApplication                  : No active profile set, falling back to 1 default profile: "default"
2022-08-05 00:36:39.523  INFO 5252 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-08-05 00:36:39.524  INFO 5252 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-08-05 00:36:40.268  INFO 5252 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:36:40.269  INFO 5252 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-08-05 00:36:40.288  INFO 5252 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 0 Reactive MongoDB repository interfaces.
2022-08-05 00:36:40.730  INFO 5252 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:36:40.731  INFO 5252 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-08-05 00:36:40.747  INFO 5252 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2022-08-05 00:36:42.705 TRACE 5252 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	c.l.l.c.TranslationController:
	{GET /translate}: translate(String,String,String)
	{GET /translate/raw}: translateRaw(String,String,String)
2022-08-05 00:36:42.726 TRACE 5252 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.a.OpenApiWebfluxResource:
	{GET /v3/api-docs, produces [application/json]}: openapiJson(ServerHttpRequest,String,Locale)
	{GET /v3/api-docs.yaml, produces [application/vnd.oai.openapi]}: openapiYaml(ServerHttpRequest,String,Locale)
2022-08-05 00:36:42.727 TRACE 5252 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerWelcomeWebFlux:
	{GET /swagger-ui.html}: redirectToUi(ServerHttpRequest,ServerHttpResponse)
2022-08-05 00:36:42.728 TRACE 5252 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerConfigResource:
	{GET /v3/api-docs/swagger-config, produces [application/json]}: getSwaggerUiConfig(ServerHttpRequest)
2022-08-05 00:36:42.731 DEBUG 5252 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 6 mappings in 'requestMappingHandlerMapping'
2022-08-05 00:36:42.745 TRACE 5252 --- [restartedMain] o.s.w.r.f.s.s.RouterFunctionMapping      : 0 RouterFunction(s) in 'routerFunctionMapping'
2022-08-05 00:36:43.122 TRACE 5252 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/webjars/**] onto ResourceWebHandler [classpath [META-INF/resources/webjars/]]
2022-08-05 00:36:43.123 TRACE 5252 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/**] onto ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2022-08-05 00:36:43.123 DEBUG 5252 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2022-08-05 00:36:43.394  INFO 5252 --- [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1d71548c, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@fc1c292], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3cad7606]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@1559ed3c], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-08-05 00:36:43.726  INFO 5252 --- [cluster-rtt-ClusterId{value='62ec03ab5cfba21f453cd187', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:1, serverValue:114}] to localhost:27017
2022-08-05 00:36:43.726  INFO 5252 --- [cluster-ClusterId{value='62ec03ab5cfba21f453cd187', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:2, serverValue:115}] to localhost:27017
2022-08-05 00:36:43.728  INFO 5252 --- [cluster-ClusterId{value='62ec03ab5cfba21f453cd187', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=76112000}
2022-08-05 00:36:43.849  INFO 5252 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-08-05 00:36:43.901 DEBUG 5252 --- [restartedMain] o.s.w.r.r.m.a.ControllerMethodResolver   : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2022-08-05 00:36:43.943 DEBUG 5252 --- [restartedMain] o.s.w.s.adapter.HttpWebHandlerAdapter    : enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2022-08-05 00:36:44.443  INFO 5252 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-08-05 00:36:44.503  INFO 5252 --- [restartedMain] o.s.b.web.embedded.netty.NettyWebServer  : Netty started on port 8080
2022-08-05 00:36:44.549  INFO 5252 --- [restartedMain] c.l.l.OxfordApplication                  : Started OxfordApplication in 5.627 seconds (JVM running for 6.869)
2022-08-05 00:36:45.239  INFO 5252 --- [nioEventLoopGroup-5-3] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:3, serverValue:116}] to localhost:27017
2022-08-05 00:36:49.458 TRACE 5252 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [0ddb80af-1] HTTP GET "/api/translation/v1/translate?workId=dickxfgdf&sourceLang=en&targetLang=ar", headers={masked}
2022-08-05 00:36:49.478 DEBUG 5252 --- [reactor-http-nio-2] s.w.r.r.m.a.RequestMappingHandlerMapping : [0ddb80af-1] Mapped to com.liem.languageintergration.controller.TranslationController#translate(String, String, String)
2022-08-05 00:36:49.506  INFO 5252 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start API --- TranslationController.translate ---
2022-08-05 00:36:49.514  INFO 5252 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start Service --- OxfordTranslationService.translate ---
2022-08-05 00:36:49.560  INFO 5252 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End Service --- OxfordTranslationService.translate --- in [44] ms
2022-08-05 00:36:49.561  INFO 5252 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End API --- TranslationController.translate --- in [53] ms
2022-08-05 00:36:49.587 TRACE 5252 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [74dd2c1] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:36:51.086 TRACE 5252 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [74dd2c1] [5ac52b21-1] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:36:51.128 ERROR 5252 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@1b2114df
2022-08-05 00:36:51.140 TRACE 5252 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [74dd2c1] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:36:51.886 TRACE 5252 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [74dd2c1] [02ae445b-1] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:36:51.886 ERROR 5252 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@3a015c19
2022-08-05 00:36:51.887 TRACE 5252 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [74dd2c1] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:36:52.156 TRACE 5252 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [74dd2c1] [5ac52b21-2] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:36:52.157 ERROR 5252 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@26b2fd98
2022-08-05 00:36:52.158 TRACE 5252 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [74dd2c1] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:36:52.427 TRACE 5252 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [74dd2c1] [02ae445b-2] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:36:52.427 ERROR 5252 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@483d304a
2022-08-05 00:36:52.430 DEBUG 5252 --- [reactor-http-nio-2] s.w.r.r.m.a.RequestMappingHandlerAdapter : [0ddb80af-1] Using @ExceptionHandler com.liem.languageintergration.controller.advice.GeneralControllerAdvice#handleTranslateException(TranslationException)
2022-08-05 00:36:52.438 ERROR 5252 --- [reactor-http-nio-2] c.l.l.c.advice.GeneralControllerAdvice   : Request error: 

com.liem.languageintergration.excpetions.TranslationException: 404 NOT_FOUND "Error client response"
	at com.liem.languageintergration.service.impl.OxfordTranslationService.lambda$translate$2(OxfordTranslationService.java:77) ~[classes/:na]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 from GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf [DefaultWebClient]
	*__checkpoint ⇢ Handler com.liem.languageintergration.controller.TranslationController#translate(String, String, String) [DispatcherHandler]
Original Stack Trace:
		at com.liem.languageintergration.service.impl.OxfordTranslationService.lambda$translate$2(OxfordTranslationService.java:77) ~[classes/:na]
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec$StatusHandler.apply(DefaultWebClient.java:695) ~[spring-webflux-5.3.22.jar:5.3.22]
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.applyStatusHandlers(DefaultWebClient.java:654) ~[spring-webflux-5.3.22.jar:5.3.22]
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.handleBodyMono(DefaultWebClient.java:623) ~[spring-webflux-5.3.22.jar:5.3.22]
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.lambda$bodyToMono$2(DefaultWebClient.java:541) ~[spring-webflux-5.3.22.jar:5.3.22]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2398) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribeInner(MonoFlatMapMany.java:150) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:189) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onNext(FluxRetryWhen.java:174) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:432) ~[reactor-netty-http-1.0.21.jar:1.0.21]
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:677) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:187) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:444) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:638) ~[reactor-netty-http-1.0.21.jar:1.0.21]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:314) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:435) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:510) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:449) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.79.Final.jar:4.1.79.Final]
		at java.base/java.lang.Thread.run(Thread.java:829) ~[na:na]

2022-08-05 00:36:52.446 DEBUG 5252 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [0ddb80af-1] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2022-08-05 00:36:52.446 DEBUG 5252 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [0ddb80af-1] 0..1 [com.liem.languageintergration.dto.responses.ApiResponse<?>]
2022-08-05 00:36:52.465 TRACE 5252 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [0ddb80af-1] Encoding [ApiResponse(code=000002, message=404 NOT_FOUND "Error client response", response=null, timestamp=2022-08-05T00:36:52.441199100)]
2022-08-05 00:36:52.481 TRACE 5252 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [0ddb80af-1] Completed 404 NOT_FOUND, headers={masked}
2022-08-05 00:36:52.482 TRACE 5252 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [0ddb80af-1, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:56092] Handling completed
2022-08-05 00:39:53.416  INFO 15924 --- [restartedMain] c.l.l.OxfordApplication                  : Starting OxfordApplication using Java 11.0.12 on DESKTOP-6L79JE3 with PID 15924 (D:\Work\Xperia\oxford\target\classes started by Liem in D:\Work\Xperia\oxford)
2022-08-05 00:39:53.417 DEBUG 15924 --- [restartedMain] c.l.l.OxfordApplication                  : Running with Spring Boot v2.7.2, Spring v5.3.22
2022-08-05 00:39:53.418  INFO 15924 --- [restartedMain] c.l.l.OxfordApplication                  : No active profile set, falling back to 1 default profile: "default"
2022-08-05 00:39:53.472  INFO 15924 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-08-05 00:39:53.473  INFO 15924 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-08-05 00:39:54.228  INFO 15924 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:39:54.229  INFO 15924 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-08-05 00:39:54.248  INFO 15924 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 Reactive MongoDB repository interfaces.
2022-08-05 00:39:54.694  INFO 15924 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:39:54.695  INFO 15924 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-08-05 00:39:54.710  INFO 15924 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2022-08-05 00:39:56.643 TRACE 15924 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	c.l.l.c.TranslationController:
	{GET /translate}: translate(String,String,String)
	{GET /translate/raw}: translateRaw(String,String,String)
2022-08-05 00:39:56.660 TRACE 15924 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.a.OpenApiWebfluxResource:
	{GET /v3/api-docs, produces [application/json]}: openapiJson(ServerHttpRequest,String,Locale)
	{GET /v3/api-docs.yaml, produces [application/vnd.oai.openapi]}: openapiYaml(ServerHttpRequest,String,Locale)
2022-08-05 00:39:56.662 TRACE 15924 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerWelcomeWebFlux:
	{GET /swagger-ui.html}: redirectToUi(ServerHttpRequest,ServerHttpResponse)
2022-08-05 00:39:56.663 TRACE 15924 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerConfigResource:
	{GET /v3/api-docs/swagger-config, produces [application/json]}: getSwaggerUiConfig(ServerHttpRequest)
2022-08-05 00:39:56.666 DEBUG 15924 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 6 mappings in 'requestMappingHandlerMapping'
2022-08-05 00:39:56.679 TRACE 15924 --- [restartedMain] o.s.w.r.f.s.s.RouterFunctionMapping      : 0 RouterFunction(s) in 'routerFunctionMapping'
2022-08-05 00:39:57.064 TRACE 15924 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/webjars/**] onto ResourceWebHandler [classpath [META-INF/resources/webjars/]]
2022-08-05 00:39:57.066 TRACE 15924 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/**] onto ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2022-08-05 00:39:57.066 DEBUG 15924 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2022-08-05 00:39:57.395  INFO 15924 --- [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@24f9c458, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@285a434b], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@26fcf7f9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@197484d4], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-08-05 00:39:57.722  INFO 15924 --- [cluster-ClusterId{value='62ec046df190fd226a7d7292', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:1, serverValue:118}] to localhost:27017
2022-08-05 00:39:57.724  INFO 15924 --- [cluster-rtt-ClusterId{value='62ec046df190fd226a7d7292', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:2, serverValue:117}] to localhost:27017
2022-08-05 00:39:57.725  INFO 15924 --- [cluster-ClusterId{value='62ec046df190fd226a7d7292', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=74699800}
2022-08-05 00:39:57.876  INFO 15924 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-08-05 00:39:57.929 DEBUG 15924 --- [restartedMain] o.s.w.r.r.m.a.ControllerMethodResolver   : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2022-08-05 00:39:57.977 DEBUG 15924 --- [restartedMain] o.s.w.s.adapter.HttpWebHandlerAdapter    : enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2022-08-05 00:39:58.498  INFO 15924 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-08-05 00:39:58.561  INFO 15924 --- [restartedMain] o.s.b.web.embedded.netty.NettyWebServer  : Netty started on port 8080
2022-08-05 00:39:58.585  INFO 15924 --- [restartedMain] c.l.l.OxfordApplication                  : Started OxfordApplication in 5.686 seconds (JVM running for 6.911)
2022-08-05 00:39:59.277  INFO 15924 --- [nioEventLoopGroup-5-3] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:3, serverValue:119}] to localhost:27017
2022-08-05 00:40:05.303 TRACE 15924 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [34c7d3f7-1] HTTP GET "/api/translation/v1/translate?workId=dickxfgdf&sourceLang=en&targetLang=ar", headers={masked}
2022-08-05 00:40:05.322 DEBUG 15924 --- [reactor-http-nio-2] s.w.r.r.m.a.RequestMappingHandlerMapping : [34c7d3f7-1] Mapped to com.liem.languageintergration.controller.TranslationController#translate(String, String, String)
2022-08-05 00:40:05.348  INFO 15924 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start API --- TranslationController.translate ---
2022-08-05 00:40:05.356  INFO 15924 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : Start Service --- OxfordTranslationService.translate ---
2022-08-05 00:40:05.395  INFO 15924 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End Service --- OxfordTranslationService.translate --- in [38] ms
2022-08-05 00:40:05.396  INFO 15924 --- [reactor-http-nio-2] c.l.l.utils.log.LoggingUtility           : End API --- TranslationController.translate --- in [47] ms
2022-08-05 00:40:05.419 TRACE 15924 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [255d6dba] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:40:06.906 TRACE 15924 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [255d6dba] [5bf683c7-1] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:40:06.945 ERROR 15924 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@34044738
2022-08-05 00:40:06.957 TRACE 15924 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [255d6dba] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:40:07.686 TRACE 15924 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [255d6dba] [2bee9fd5-1] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:40:07.686 ERROR 15924 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@316f0118
2022-08-05 00:40:07.687 TRACE 15924 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [255d6dba] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:40:07.943 TRACE 15924 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [255d6dba] [5bf683c7-2] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:40:07.944 ERROR 15924 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@2e0c4df5
2022-08-05 00:40:07.945 TRACE 15924 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [255d6dba] HTTP GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf, headers={masked}
2022-08-05 00:40:08.218 TRACE 15924 --- [reactor-http-nio-2] o.s.w.r.f.client.ExchangeFunctions       : [255d6dba] [2bee9fd5-2] Response 404 NOT_FOUND, headers={masked}
2022-08-05 00:40:08.219 ERROR 15924 --- [reactor-http-nio-2] c.l.l.s.impl.OxfordTranslationService    : Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@5ee1b68a
2022-08-05 00:40:08.222 DEBUG 15924 --- [reactor-http-nio-2] s.w.r.r.m.a.RequestMappingHandlerAdapter : [34c7d3f7-1] Using @ExceptionHandler com.liem.languageintergration.controller.advice.GeneralControllerAdvice#handleTranslateException(TranslationException)
2022-08-05 00:40:08.231 ERROR 15924 --- [reactor-http-nio-2] c.l.l.c.advice.GeneralControllerAdvice   : Request error: 

com.liem.languageintergration.excpetions.TranslationException: 404 NOT_FOUND "Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@5ee1b68a"
	at com.liem.languageintergration.service.impl.OxfordTranslationService.lambda$translate$2(OxfordTranslationService.java:78) ~[classes/:na]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 from GET https://od-api.oxforddictionaries.com/api/v2/translations/en/ar/dickxfgdf [DefaultWebClient]
	*__checkpoint ⇢ Handler com.liem.languageintergration.controller.TranslationController#translate(String, String, String) [DispatcherHandler]
Original Stack Trace:
		at com.liem.languageintergration.service.impl.OxfordTranslationService.lambda$translate$2(OxfordTranslationService.java:78) ~[classes/:na]
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec$StatusHandler.apply(DefaultWebClient.java:695) ~[spring-webflux-5.3.22.jar:5.3.22]
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.applyStatusHandlers(DefaultWebClient.java:654) ~[spring-webflux-5.3.22.jar:5.3.22]
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.handleBodyMono(DefaultWebClient.java:623) ~[spring-webflux-5.3.22.jar:5.3.22]
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.lambda$bodyToMono$2(DefaultWebClient.java:541) ~[spring-webflux-5.3.22.jar:5.3.22]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2398) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribeInner(MonoFlatMapMany.java:150) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:189) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onNext(FluxRetryWhen.java:174) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172) ~[reactor-core-3.4.21.jar:3.4.21]
		at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:432) ~[reactor-netty-http-1.0.21.jar:1.0.21]
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:677) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:187) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:444) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:638) ~[reactor-netty-http-1.0.21.jar:1.0.21]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93) ~[reactor-netty-core-1.0.21.jar:1.0.21]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:314) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:435) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285) ~[netty-handler-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:510) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:449) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279) ~[netty-codec-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496) ~[netty-transport-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.79.Final.jar:4.1.79.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.79.Final.jar:4.1.79.Final]
		at java.base/java.lang.Thread.run(Thread.java:829) ~[na:na]

2022-08-05 00:40:08.239 DEBUG 15924 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [34c7d3f7-1] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2022-08-05 00:40:08.239 DEBUG 15924 --- [reactor-http-nio-2] .s.w.r.r.m.a.ResponseEntityResultHandler : [34c7d3f7-1] 0..1 [com.liem.languageintergration.dto.responses.ApiResponse<?>]
2022-08-05 00:40:08.258 TRACE 15924 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [34c7d3f7-1] Encoding [ApiResponse(code=000002, message=404 NOT_FOUND "Error client response: org.springframework.web.reactive.function.client.DefaultClientResponse@5ee1b68a", response=null, timestamp=2022-08-05T00:40:08.234276)]
2022-08-05 00:40:08.277 TRACE 15924 --- [reactor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [34c7d3f7-1] Completed 404 NOT_FOUND, headers={masked}
2022-08-05 00:40:08.278 TRACE 15924 --- [reactor-http-nio-2] org.springframework.web.HttpLogging      : [34c7d3f7-1, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:56238] Handling completed
2022-08-05 00:46:08.993  INFO 8160 --- [restartedMain] c.l.l.OxfordApplication                  : Starting OxfordApplication using Java 11.0.12 on DESKTOP-6L79JE3 with PID 8160 (D:\Work\Xperia\oxford\target\classes started by Liem in D:\Work\Xperia\oxford)
2022-08-05 00:46:08.995 DEBUG 8160 --- [restartedMain] c.l.l.OxfordApplication                  : Running with Spring Boot v2.7.2, Spring v5.3.22
2022-08-05 00:46:08.997  INFO 8160 --- [restartedMain] c.l.l.OxfordApplication                  : No active profile set, falling back to 1 default profile: "default"
2022-08-05 00:46:09.055  INFO 8160 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-08-05 00:46:09.056  INFO 8160 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-08-05 00:46:09.828  INFO 8160 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:46:09.829  INFO 8160 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2022-08-05 00:46:09.847  INFO 8160 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 0 Reactive MongoDB repository interfaces.
2022-08-05 00:46:10.250  INFO 8160 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-08-05 00:46:10.252  INFO 8160 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-08-05 00:46:10.267  INFO 8160 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2022-08-05 00:46:12.218 TRACE 8160 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	c.l.l.c.TranslationController:
	{GET /translate}: translate(String,String,String)
	{GET /translate/raw}: translateRaw(String,String,String)
2022-08-05 00:46:12.238 TRACE 8160 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.a.OpenApiWebfluxResource:
	{GET /v3/api-docs, produces [application/json]}: openapiJson(ServerHttpRequest,String,Locale)
	{GET /v3/api-docs.yaml, produces [application/vnd.oai.openapi]}: openapiYaml(ServerHttpRequest,String,Locale)
2022-08-05 00:46:12.240 TRACE 8160 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerWelcomeWebFlux:
	{GET /swagger-ui.html}: redirectToUi(ServerHttpRequest,ServerHttpResponse)
2022-08-05 00:46:12.242 TRACE 8160 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 
	o.s.w.u.SwaggerConfigResource:
	{GET /v3/api-docs/swagger-config, produces [application/json]}: getSwaggerUiConfig(ServerHttpRequest)
2022-08-05 00:46:12.246 DEBUG 8160 --- [restartedMain] s.w.r.r.m.a.RequestMappingHandlerMapping : 6 mappings in 'requestMappingHandlerMapping'
2022-08-05 00:46:12.260 TRACE 8160 --- [restartedMain] o.s.w.r.f.s.s.RouterFunctionMapping      : 0 RouterFunction(s) in 'routerFunctionMapping'
2022-08-05 00:46:12.690 TRACE 8160 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/webjars/**] onto ResourceWebHandler [classpath [META-INF/resources/webjars/]]
2022-08-05 00:46:12.690 TRACE 8160 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped [/**] onto ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2022-08-05 00:46:12.691 DEBUG 8160 --- [restartedMain] o.s.w.r.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2022-08-05 00:46:12.975  INFO 8160 --- [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Foundation/11.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@6baa37c8, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@45602404], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@463a4e97]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@1ebb893d], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-08-05 00:46:13.349  INFO 8160 --- [cluster-ClusterId{value='62ec05e4cd42e6424ea0b8bd', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:1, serverValue:121}] to localhost:27017
2022-08-05 00:46:13.350  INFO 8160 --- [cluster-rtt-ClusterId{value='62ec05e4cd42e6424ea0b8bd', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:2, serverValue:120}] to localhost:27017
2022-08-05 00:46:13.351  INFO 8160 --- [cluster-ClusterId{value='62ec05e4cd42e6424ea0b8bd', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=73689600}
2022-08-05 00:46:13.475  INFO 8160 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-08-05 00:46:13.537 DEBUG 8160 --- [restartedMain] o.s.w.r.r.m.a.ControllerMethodResolver   : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2022-08-05 00:46:13.586 DEBUG 8160 --- [restartedMain] o.s.w.s.adapter.HttpWebHandlerAdapter    : enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2022-08-05 00:46:14.224  INFO 8160 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-08-05 00:46:14.304  INFO 8160 --- [restartedMain] o.s.b.web.embedded.netty.NettyWebServer  : Netty started on port 8080
2022-08-05 00:46:14.338  INFO 8160 --- [restartedMain] c.l.l.OxfordApplication                  : Started OxfordApplication in 5.867 seconds (JVM running for 7.416)
2022-08-05 00:46:14.924  INFO 8160 --- [nioEventLoopGroup-5-3] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:3, serverValue:122}] to localhost:27017
